{"version":3,"sources":["components/styles.js","pages/App/components/Form/styles.js","components/RadioGroup/index.js","utils/pixKeyTypes.js","utils/typesUtils.js","utils/generatePropsRandom.js","contexts/forceReloadData.js","components/Input/styles.js","components/Input/index.js","components/Switch/index.js","pages/App/styles.js","data/types.js","components/CheckBox/index.js","pages/App/components/Form/components/TypesTransaction/styles.js","pages/App/components/Form/components/TypesTransaction/index.js","pages/App/components/Form/index.js","services/argon2i.js","utils/base64.js","data/formDataDefault.js","components/RequestJson/styles.js","components/RequestJson/index.js","components/UrlParametersList/styles.js","components/UrlParametersList/index.js","pages/App/index.js","pages/Api/components/styles.js","pages/Api/components/Form/styles.js","pages/Api/components/Form/index.js","pages/Api/styles.js","pages/Api/components/UrlApi/styles.js","pages/Api/components/UrlApi/index.js","pages/Api/index.js","routes.js","index.js"],"names":["ContainerRow","styled","div","ContainerFlexWidth","widthPercent","Container","ContainerHeight","height","FormLabelCustom","h2","ContainerFlexWidthCustom","StyledFormControlLabel","props","FormControlLabel","theme","checked","color","palette","primary","main","MyFormControlLabel","defaultCheckedValue","useRadioGroup","value","UseRadioGroup","labelGroup","checkData","setChecked","validDirection","direction","FormLabel","style","userSelect","marginTop","component","RadioGroup","defaultValue","name","onChange","event","target","flexDirection","map","data","label","control","Radio","PixKeyTypes","typesList","PIX","BILLET","WIRETRANFER","WALLET","getRandomHash","size","uuidv4","replace","substring","getRandomMerchantTransactionId","ForceReloadDataContext","createContext","ForceReloadDataProvider","children","useState","disable","setDisable","Provider","useForceReloadData","context","useContext","Error","InputCustom","TextField","Input","setValue","rest","marginBottom","id","variant","e","InputSwitch","Switch","ContainerResult","CustomButton","Button","operation_deposit","operation_withdraw","CheckboxesGroup","isChecked","FormControl","sx","m","mr","FormGroup","Checkbox","ContainerCheckTypes","typesCheckedsDefault","TypesTransaction","setType","operation","setCheckDataSelectedType","showingAndSetPixKeyDefault","typesCheckeds","setTypesCheckeds","setTypesChecked","typeKey","currentTypesCheckeds","newTypesCheckeds","newType","binTypePix","binTypeBillet","binTypeWireTransfer","binTypeWallet","parseInt","toString","getTypeInteger","useEffect","newCheckDataSelectedType","push","enableCheckDataSelectedType","Form","setData","setGateway_token","gateway_token","setUrlGenerated","base_url","setBaseUrl","typeFormSelected","dataDefault","merchant_id","setMerchantId","merchant_transaction_id","setMerchantTransactionId","email","setEmail","document_number","setDocumentNumber","account_id","setAccountId","currency","setCurrency","setOperation","amount","setAmount","callback_url","setcCallback_url","redirect_url","setRedirect_url","type","selected_type","setSelected_type","checkDataSelectedType","pix_key_type","setPix_key_type","pix_key","setPix_key","login_email","setLoginEmail","password","setPassword","logo_url","setLogoUrl","auto_approve","setAuto_approve","checkIsTypeWithdrawValid","Type","handleCleanPixKeyData","isDepositWallet","isWithdraw","oldData","setDefaultData","useCallback","DataDefault","useLocation","search","alignItems","ListItemButton","href","padding","marginLeft","fontSize","Typography","textDecoration","margin","onClick","width","textTransform","string_value","packageJson","version","argon2","require","getArgon2i","pass","a","hash","salt","time","mem","parallelism","hashLen","ArgonType","Argon2i","then","encoded","catch","console","error","message","code","argon2i","utf8_to_b64","str","window","btoa","unescape","encodeURIComponent","DataDefaultDev","api_base_url","DataDefaultPlayground","DataDefaultStaging","PColor","p","RequestJson","dataRequest","url","urlGateway","textButton","baseUrl","isDevLocalhost","devLocalhostPort","getUrlGateway","handleCopyToClipboard","dataRequestJson","JSON","stringify","textToCopy","copyToClipboard","textToNotification","NotificationManager","success","IconButtonMain","OpenInNewIcon","ContentCopyIcon","handleButtonAction","open","paddingTop","disabled","endIcon","maxWidth","background","SectionTitle","ListContainer","ul","ListItem","li","isEmpty","Alert","Legend","AlertContainer","UrlParametersList","parameters","requiredFields","validationArray","renderAlert","includes","Object","entries","forEach","param","length","index","isRequired","renderParametersItem","App","query","URLSearchParams","isDev","get","isDevPlayground","isDevStaging","React","urlGenerated","setURL","setUrlGateway","setTypeFormSelected","urlGatewayParameters","setUrlGatewayParameters","DataURL","signature","OBJ_DataURL","STRING_Signature","logoUrl","mock_type","mock_auto_approve","Signature","handleGenerateSignature","urlWithoutSignature","valueToGetArgon2iHash","argon2iHash","justifyContent","marginRight","handleGenerateURL","minWidth","toUpperCase","typesAvailableDefault","getOperationsAvailable","handleSetPixKey","Operation","getNumberIfNotEmpty","valueString","Number","isWithdrawPix","newData","getNewData","Breadcrumbs","Link","FlagPost","UrlApi","requiredFieldsDefault","requiredFieldsDefaultWithdrawPix","requiredFieldsDefaultDepositWallet","getRequiredFieldsDefault","useQuery","checkIsDev","getDataDefault","BrowserRouter","history","basename","exact","path","element","Api","createBrowserHistory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca4ea2b8.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ContainerRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: auto;\n  @media (max-width: 930px) {\n    flex-direction: column;\n  }\n`;\n\nexport const ContainerFlexWidth = styled.div`\n  width: ${({ widthPercent }) => (widthPercent ? `${widthPercent}%` : \"100%\")};\n  flex-direction: row;\n  height: auto;\n  @media (max-width: 930px) {\n    flex-direction: column;\n  }\n`;\n","import styled from \"styled-components\";\nimport { ContainerFlexWidth } from \"../../../../components/styles\";\n\nexport const Container = styled.div`\n  width: 45%;\n  height: auto;\n  justify-content: center;\n  align-items: center;\n  padding: 0px 20px 20px 20px;\n  background-color: #ffffff;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  @media (max-width: 930px) {\n    width: 100%;\n    padding: 10px;\n  }\n`;\n\nexport const ContainerHeight = styled.div`\n  width: 100%;\n  height: ${({ height }) => (height ? `${height}px` : 0)};\n  min-height: ${({ height }) => (height ? `${height}px` : 0)};\n`;\n\nexport const ContainerCheckTypes = styled.div`\n  width: 100%;\n  flex-direction: row;\n  height: auto;\n`;\n\nexport const FormLabelCustom = styled.h2`\n  font-size: 18px;\n  color: grey;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\n  @media (max-width: 930px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport RadioGroup, { useRadioGroup } from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Radio from \"@mui/material/Radio\";\n// import { Container } from './styles';\n\nconst StyledFormControlLabel = styled((props) => (\n  <FormControlLabel {...props} />\n))(({ theme, checked }) => ({\n  \".MuiFormControlLabel-label\": checked && {\n    color: theme.palette.primary.main,\n  },\n}));\n\nfunction MyFormControlLabel({ defaultCheckedValue, ...props }) {\n  const radioGroup = useRadioGroup();\n  let checked = false;\n  if (radioGroup) {\n    checked = defaultCheckedValue === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n}\n\nexport default function UseRadioGroup({\n  labelGroup,\n  checkData = [],\n  defaultCheckedValue,\n  setChecked,\n  direction,\n}) {\n  const validDirection = direction || \"row\";\n\n  return (\n    <>\n      <FormLabel\n        style={{ userSelect: \"none\", marginTop: -13 }}\n        component=\"legend\"\n      >\n        {labelGroup}\n      </FormLabel>\n      <RadioGroup\n        defaultValue=\"first\"\n        name=\"use-radio-group\"\n        onChange={(event) => setChecked(event.target.value)}\n        style={{ flexDirection: validDirection }}\n      >\n        {checkData.map((data) => (\n          <MyFormControlLabel\n            key={data.value}\n            defaultCheckedValue={defaultCheckedValue}\n            value={data.value}\n            label={data.label}\n            control={<Radio />}\n          />\n        ))}\n      </RadioGroup>\n    </>\n  );\n}\n","// pix_key_type\n// 0 - document (cpf/cnpf)\n// 2 - phone\n// 3 - email\n\nexport const PixKeyTypes = {\n  document: \"0\",\n  phone: \"2\",\n  email: \"3\",\n};\n","// 0000 - 0 - Nenhum\n// 0001 - 1 - Pix\n// 0010 - 2 - Boleto\n// 0011 - 3 - Boleto, Pix\n// 0100 - 4 - TED\n// 0101 - 5 - TED, Pix\n// 0110 - 6 - TED, Boleto\n// 0111 - 7 - TED, Boleto, PIX\n// 1000 - 8 - Wallet\n// 1001 - 9 - Wallet, Pix\n// 1010 - 10 - Wallet, Boleto\n// 1011 - 11 - Wallet, Boleto, Pix\n// 1100 - 12 - Wallet, Ted\n// 1101 - 13 - Wallet, Ted, Pix\n// 1110 - 14 - Wallet, Ted, Boleto\n// 1111 - 15 - Wallet, Ted, Boleto, Pix (Todas)\n\n// 1 - PIX\n// 2 - Boleto\n// 4 - TED\n// 8 - Wallet\n\nexport const typesList = {\n  PIX: 1,\n  BILLET: 2,\n  WIRETRANFER: 4,\n  WALLET: 8,\n};\n\nexport function getTypeInteger(typesCheckeds) {\n  const binTypePix = typesCheckeds[typesList.PIX] ? \"1\" : \"0\";\n  const binTypeBillet = typesCheckeds[typesList.BILLET] ? \"1\" : \"0\";\n  const binTypeWireTransfer = typesCheckeds[typesList.WIRETRANFER] ? \"1\" : \"0\";\n  const binTypeWallet = typesCheckeds[typesList.WALLET] ? \"1\" : \"0\";\n  const typeInBinary =\n    binTypeWallet + binTypeWireTransfer + binTypeBillet + binTypePix;\n  const typeInInteger = parseInt(typeInBinary, 2);\n  return typeInInteger.toString();\n}\n","import { v4 as uuidv4 } from \"uuid\";\n\nexport function getRandomHash(size) {\n  const randomMerchantTransactionId = uuidv4().replace(/-/g, \"\");\n  return randomMerchantTransactionId.substring(0, size);\n}\n\nexport function getRandomMerchantTransactionId() {\n  return getRandomHash(10);\n}\n\nexport function getRandomUserAccountId() {\n  return getRandomHash(6);\n}\n","import React, { createContext, useState, useContext } from \"react\";\n\nexport const ForceReloadDataContext = createContext();\n\nexport default function ForceReloadDataProvider({ children }) {\n  const [disable, setDisable] = useState(false);\n\n  return (\n    <ForceReloadDataContext.Provider\n      value={{\n        disable,\n        setDisable,\n      }}\n    >\n      {children}\n    </ForceReloadDataContext.Provider>\n  );\n}\n\nexport function useForceReloadData() {\n  const context = useContext(ForceReloadDataContext);\n  if (!context)\n    throw new Error(\"useDisable must be used within a ForceReloadDataProvider\");\n  const { disable, setDisable } = context;\n  return { disable, setDisable };\n}\n","import styled from \"styled-components\";\nimport TextField from \"@mui/material/TextField\";\n\nexport const InputCustom = styled(TextField)`\n  width: 100%;\n`;\n","import React from \"react\";\nimport { InputCustom } from \"./styles\";\n\nfunction Input({ label, value, setValue, ...rest }) {\n  return (\n    <InputCustom\n      value={value}\n      style={{ marginBottom: 5, marginTop: 5 }}\n      id=\"outlined-basic\"\n      label={label}\n      size=\"small\"\n      variant=\"outlined\"\n      onChange={(e) => setValue(e.target.value)}\n      {...rest}\n    />\n  );\n}\n\nexport default Input;\n","import { FormLabel, Switch } from \"@mui/material\";\nimport React from \"react\";\n\nconst InputSwitch = (props) => {\n  const { name, checked, label, onChange } = props;\n\n  return (\n    <>\n      <FormLabel\n        style={{ userSelect: \"none\", marginTop: -13 }}\n        component=\"legend\"\n      >\n        {label}\n      </FormLabel>\n      <Switch\n        checked={checked}\n        onChange={(event) => onChange(event)}\n        color=\"primary\"\n        name={name}\n      />\n    </>\n  );\n};\n\nexport default InputSwitch;\n","import styled from \"styled-components\";\nimport Button from \"@mui/material/Button\";\nimport { ContainerFlexWidth } from \"../../components/styles\";\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 10px;\n  background: #fff;\n  justify-content: center;\n  align-items: flex-start;\n  flex-direction: row;\n  @media (max-width: 930px) {\n    flex-direction: column;\n    padding: 20px;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const ContainerResult = styled.div`\n  width: 40%;\n  margin-left: 20px;\n  height: auto;\n  justify-content: center;\n  align-items: center;\n  padding: 0px 20px 20px 20px;\n  background-color: #ffffff;\n  border-radius: 5px;\n  @media (max-width: 930px) {\n    width: 100%;\n    margin-left: 0px;\n  }\n`;\n\nexport const CustomButton = styled(Button)`\n  @media (max-width: 930px) {\n    width: 100%;\n  }\n`;\n\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\n  @media (max-width: 930px) {\n    width: 100%;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n","export const operation_deposit = \"0\";\nexport const operation_withdraw = \"5\";\n","import * as React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nexport default function CheckboxesGroup({ isChecked, setChecked, label }) {\n  return (\n    <FormControl sx={{ m: 0, mr: 3 }} component=\"fieldset\" variant=\"standard\">\n      <FormGroup>\n        <FormControlLabel\n          style={{ userSelect: \"none\" }}\n          label={label || \"\"}\n          control={\n            <Checkbox\n              checked={isChecked}\n              onChange={(event) => setChecked(event.target.checked)}\n              name=\"gilad\"\n            />\n          }\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const ContainerCheckTypes = styled.div`\n  width: 100%;\n  flex-direction: row;\n  height: auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { typesList, getTypeInteger } from \"../../../../../../utils/typesUtils\";\nimport {\n  operation_deposit,\n  operation_withdraw,\n} from \"../../../../../../data/types\";\nimport Checkbox from \"../../../../../../components/CheckBox\";\n\nimport { ContainerCheckTypes } from \"./styles\";\n\nconst typesCheckedsDefault = {\n  [typesList.WIRETRANFER]: false,\n  [typesList.BILLET]: false,\n  [typesList.PIX]: false,\n  [typesList.WALLET]: false,\n};\n\nconst TypesTransaction = ({\n  setType,\n  operation,\n  setCheckDataSelectedType,\n  showingAndSetPixKeyDefault,\n}) => {\n  const [typesCheckeds, setTypesCheckeds] = useState({\n    ...typesCheckedsDefault,\n    [typesList.PIX]: true,\n  });\n\n  function setTypesChecked(typeKey, isChecked) {\n    let currentTypesCheckeds = typesCheckeds;\n    if (operation === operation_withdraw) {\n      currentTypesCheckeds = { ...typesCheckedsDefault };\n    }\n    const newTypesCheckeds = { ...currentTypesCheckeds, [typeKey]: isChecked };\n    setTypesCheckeds(newTypesCheckeds);\n    const newType = getTypeInteger(newTypesCheckeds);\n    setType(newType);\n  }\n\n  function setTypesCheckedDefault() {\n    if (operation === operation_withdraw) {\n      setTypesCheckeds({\n        ...typesCheckedsDefault,\n        [typesList.PIX]: true,\n      });\n      setType(\"1\");\n    }\n  }\n\n  useEffect(() => {\n    setTypesCheckedDefault(operation, setTypesCheckeds);\n  }, [operation]);\n\n  useEffect(() => {\n    function enableCheckDataSelectedType() {\n      const newCheckDataSelectedType = [];\n      if (typesCheckeds[typesList.PIX]) {\n        newCheckDataSelectedType.push({\n          value: typesList.PIX.toString(),\n          label: \"Pix\",\n        });\n      }\n      if (typesCheckeds[typesList.BILLET]) {\n        newCheckDataSelectedType.push({\n          value: typesList.BILLET.toString(),\n          label: \"Billet\",\n        });\n      }\n      if (typesCheckeds[typesList.WIRETRANFER]) {\n        newCheckDataSelectedType.push({\n          value: typesList.WIRETRANFER.toString(),\n          label: \"Wire Transfer\",\n        });\n      }\n      if (typesCheckeds[typesList.WALLET]) {\n        newCheckDataSelectedType.push({\n          value: typesList.WALLET.toString(),\n          label: \"Paylivre Wallet\",\n        });\n      }\n\n      setCheckDataSelectedType(newCheckDataSelectedType);\n    }\n    enableCheckDataSelectedType();\n    showingAndSetPixKeyDefault();\n  }, [typesCheckeds]);\n\n  return (\n    <ContainerCheckTypes>\n      <Checkbox\n        label=\"PIX\"\n        isChecked={typesCheckeds[typesList.PIX]}\n        setChecked={(isChecked) => setTypesChecked(typesList.PIX, isChecked)}\n      />\n      <Checkbox\n        label=\"Paylivre Wallet\"\n        isChecked={typesCheckeds[typesList.WALLET]}\n        setChecked={(isChecked) => setTypesChecked(typesList.WALLET, isChecked)}\n      />\n      {operation === operation_deposit && (\n        <>\n          <Checkbox\n            label=\"Billet\"\n            isChecked={typesCheckeds[typesList.BILLET]}\n            setChecked={(isChecked) =>\n              setTypesChecked(typesList.BILLET, isChecked)\n            }\n          />\n          <Checkbox\n            label=\"Wire Transfer\"\n            isChecked={typesCheckeds[typesList.WIRETRANFER]}\n            setChecked={(isChecked) =>\n              setTypesChecked(typesList.WIRETRANFER, isChecked)\n            }\n          />\n        </>\n      )}\n    </ContainerCheckTypes>\n  );\n};\n\nexport default TypesTransaction;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport { Typography, ListItemButton } from \"@mui/material\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Container,\n  FormLabelCustom,\n  ContainerHeight,\n  ContainerFlexWidthCustom,\n} from \"./styles\";\n\nimport { ContainerRow } from \"../../../../components/styles\";\n\nimport RadioGroup from \"../../../../components/RadioGroup\";\nimport { PixKeyTypes } from \"../../../../utils/pixKeyTypes\";\nimport { typesList } from \"../../../../utils/typesUtils\";\n\nimport { getRandomMerchantTransactionId } from \"../../../../utils/generatePropsRandom\";\n\nimport { useForceReloadData } from \"../../../../contexts/forceReloadData\";\nimport Input from \"../../../../components/Input\";\nimport InputSwitch from \"../../../../components/Switch\";\nimport packageJson from \"../../../../../package.json\";\nimport { CustomButton } from \"../../styles\";\nimport { operation_deposit, operation_withdraw } from \"../../../../data/types\";\nimport TypesTransaction from \"./components/TypesTransaction\";\n\nfunction Form({\n  setData,\n  setGateway_token,\n  gateway_token,\n  setUrlGenerated,\n  base_url,\n  setBaseUrl,\n  typeFormSelected,\n  dataDefault,\n}) {\n  const logo_url_example =\n    \"https://github.com/paylivre/gateway-example-react-js/blob/master/assets/logo_jackpot_new.png?raw=true\";\n  const [merchant_id, setMerchantId] = useState(dataDefault.merchant_id);\n  const [merchant_transaction_id, setMerchantTransactionId] = useState(\n    getRandomMerchantTransactionId()\n  );\n  const [email, setEmail] = useState(dataDefault.email);\n  const [document_number, setDocumentNumber] = useState(\n    dataDefault.document_number\n  );\n  const [account_id, setAccountId] = useState(\"123654asd\");\n  const [currency, setCurrency] = useState(\"BRL\");\n  const [operation, setOperation] = useState(operation_deposit);\n  const [amount, setAmount] = useState(\"500\");\n  const [callback_url, setcCallback_url] = useState(\n    \"https://api.dev.paylivre.com/dev/v2/callback\"\n  );\n  const [redirect_url, setRedirect_url] = useState(\n    \"https://www.merchant_to_you.com\"\n  );\n  const [type, setType] = useState(\"1\");\n  const [selected_type, setSelected_type] = useState(\"1\");\n  const [checkDataSelectedType, setCheckDataSelectedType] = useState([]);\n  const [pix_key_type, setPix_key_type] = useState(\"\");\n  const [pix_key, setPix_key] = useState(\"\");\n  const [login_email, setLoginEmail] = useState(dataDefault.email);\n  const [password, setPassword] = useState(\"123123123\");\n  const [logo_url, setLogoUrl] = useState(logo_url_example);\n  const [auto_approve, setAuto_approve] = useState(true);\n  const { disable, setDisable } = useForceReloadData();\n\n  function checkIsTypeWithdrawValid(Type) {\n    switch (Type) {\n      case \"1\": {\n        return true;\n      }\n      case \"9\": {\n        return true;\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n\n  function handleCleanPixKeyData() {\n    setPix_key_type(\"\");\n    setPix_key(\"\");\n  }\n\n  function showingAndSetPixKeyDefault() {\n    if (!checkIsTypeWithdrawValid(type)) {\n      handleCleanPixKeyData();\n    }\n  }\n\n  const isDepositWallet =\n    typeFormSelected === \"json\" &&\n    operation === operation_deposit &&\n    selected_type === typesList.WALLET.toString();\n\n  useEffect(() => {\n    // Toda vez que alterar algum dado no data\n    setUrlGenerated(false);\n    setDisable(false);\n\n    const isWithdraw = operation === operation_withdraw;\n\n    function getType() {\n      return type;\n    }\n\n    setData((oldData) => {\n      return {\n        ...oldData,\n        account_id,\n        amount,\n        auto_approve: auto_approve === true ? \"1\" : \"0\",\n        callback_url,\n        currency,\n        document_number,\n        email,\n        merchant_id,\n        operation,\n        merchant_transaction_id,\n        redirect_url,\n        selected_type: type === \"0\" ? \"\" : selected_type,\n        type: getType(),\n        login_email: isDepositWallet ? login_email : \"\",\n        password: isDepositWallet ? password : \"\",\n        pix_key_type: isWithdraw ? pix_key_type : \"\",\n        pix_key: isWithdraw ? pix_key : \"\",\n        logo_url,\n      };\n    });\n  }, [\n    setData,\n    merchant_id,\n    merchant_transaction_id,\n    email,\n    document_number,\n    account_id,\n    auto_approve,\n    currency,\n    operation,\n    amount,\n    callback_url,\n    redirect_url,\n    setUrlGenerated,\n    gateway_token,\n    base_url,\n    type,\n    selected_type,\n    pix_key_type,\n    pix_key,\n    logo_url,\n  ]);\n\n  function handleReloadRandomFormatData() {\n    setMerchantTransactionId(getRandomMerchantTransactionId());\n    setDisable(false);\n  }\n\n  function isAutoApproveSelected() {\n    return auto_approve === true ? (\n      <Typography component=\"span\" color=\"primary\">\n        true\n      </Typography>\n    ) : (\n      <Typography component=\"span\" color=\"error\">\n        false\n      </Typography>\n    );\n  }\n\n  function handleSetPixKey(string_value) {\n    if (string_value === PixKeyTypes.document) {\n      setPix_key_type(PixKeyTypes.document);\n      setPix_key(document_number);\n    }\n\n    if (string_value === PixKeyTypes.email) {\n      setPix_key_type(PixKeyTypes.email);\n      setPix_key(email);\n    }\n\n    if (string_value === PixKeyTypes.phone) {\n      setPix_key_type(PixKeyTypes.phone);\n      setPix_key(\"\");\n    }\n  }\n\n  const setDefaultData = useCallback((DataDefault) => {\n    setOperation(operation_withdraw);\n    setMerchantId(DataDefault.merchant_id);\n    setGateway_token(DataDefault.gateway_token);\n    setBaseUrl(DataDefault.base_url);\n  }, []);\n\n  useEffect(() => {\n    setDefaultData(dataDefault);\n  }, [useLocation().search, dataDefault]);\n\n  return (\n    <Container>\n      <ContainerRow\n        style={{ marginBottom: 0, height: 50, alignItems: \"center\" }}\n      >\n        <ListItemButton\n          color=\"primary\"\n          component=\"a\"\n          href=\"/gateway-example-javascript/#/api\"\n          style={{ padding: 0, marginLeft: -10 }}\n        >\n          <ArrowRightIcon color=\"primary\" fontSize=\"medium\" />\n          <Typography\n            color=\"primary\"\n            component=\"span\"\n            style={{\n              fontSize: 16,\n              textDecoration: \"underline\",\n            }}\n          >\n            Withdraw API\n          </Typography>\n        </ListItemButton>\n      </ContainerRow>\n      <ContainerRow\n        style={{ marginBottom: 20, height: 50, alignItems: \"center\" }}\n      >\n        <ContainerFlexWidthCustom widthPercent={48}>\n          <FormLabelCustom style={{ margin: 0 }}>\n            Merchant Data:\n          </FormLabelCustom>\n        </ContainerFlexWidthCustom>\n        <ContainerFlexWidthCustom widthPercent={50} style={{}}>\n          <Button\n            onClick={() => handleReloadRandomFormatData()}\n            style={{\n              width: \"100%\",\n              textTransform: \"none\",\n            }}\n            variant={disable === true ? \"contained\" : \"outlined\"}\n            color=\"success\"\n          >\n            Reload Random Data\n          </Button>\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n      <ContainerRow>\n        <ContainerFlexWidthCustom widthPercent={48}>\n          <Input\n            value={merchant_id}\n            setValue={(value) => setMerchantId(value)}\n            label=\"Merchant ID:\"\n          />\n          <ContainerHeight height={15} />\n        </ContainerFlexWidthCustom>\n        <ContainerFlexWidthCustom widthPercent={45}>\n          <Input\n            value={merchant_transaction_id}\n            setValue={(value) => setMerchantTransactionId(value)}\n            label=\"Merchant Transaction ID:\"\n          />\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n      <ContainerHeight height={5} />\n      <Input\n        value={gateway_token}\n        setValue={(value) => setGateway_token(value)}\n        label=\"Gateway Token:\"\n      />\n      <FormLabelCustom>User Data:</FormLabelCustom>\n      <Input\n        value={email}\n        setValue={(value) => setEmail(value)}\n        label=\"User Email: (OPTIONAL)\"\n      />\n      <ContainerHeight height={20} />\n      <ContainerRow>\n        <ContainerFlexWidthCustom widthPercent={48}>\n          <Input\n            value={document_number}\n            setValue={(value) => setDocumentNumber(value)}\n            label=\"User Document - CPF/CNPJ: (OPTIONAL)\"\n          />\n        </ContainerFlexWidthCustom>\n\n        <ContainerFlexWidthCustom widthPercent={48}>\n          <Input\n            value={account_id}\n            setValue={(value) => setAccountId(value)}\n            label=\"User Account ID in Merchant:\"\n          />\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n      <FormLabelCustom>Transaction Data:</FormLabelCustom>\n      <ContainerRow>\n        <ContainerFlexWidthCustom widthPercent={50}>\n          <Input\n            value={amount}\n            setValue={(value) => setAmount(value)}\n            label=\"Amount:\"\n          />\n        </ContainerFlexWidthCustom>\n        <ContainerHeight height={15} />\n        <ContainerFlexWidthCustom widthPercent={60}>\n          <InputSwitch\n            label=\"Auto approve\"\n            checked={auto_approve}\n            onChange={(event) => setAuto_approve(event.target.checked)}\n          />\n          {isAutoApproveSelected()}\n        </ContainerFlexWidthCustom>\n        <ContainerFlexWidthCustom widthPercent={60}>\n          <RadioGroup\n            defaultCheckedValue={currency}\n            setChecked={(value) => setCurrency(value)}\n            labelGroup=\"Currency\"\n            checkData={[\n              { value: \"BRL\", label: \"BRL\" },\n              { value: \"USD\", label: \"USD\" },\n            ]}\n          />\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n      <ContainerHeight height={15} />\n      <RadioGroup\n        defaultCheckedValue={operation}\n        setChecked={(value) => setOperation(value)}\n        labelGroup=\"Operation\"\n        checkData={[\n          { value: \"0\", label: \"Deposit\" },\n          { value: \"5\", label: \"Withdraw\" },\n        ]}\n      />\n      <ContainerHeight height={15} />\n      <FormLabel component=\"legend\">Type passed by merchant</FormLabel>\n\n      <TypesTransaction\n        setType={setType}\n        operation={operation}\n        setCheckDataSelectedType={setCheckDataSelectedType}\n        showingAndSetPixKeyDefault={() => showingAndSetPixKeyDefault()}\n      />\n\n      {typeFormSelected === \"json\" && (\n        <>\n          <ContainerHeight height={15} />\n          <RadioGroup\n            defaultCheckedValue={selected_type}\n            setChecked={(value) => setSelected_type(value)}\n            labelGroup=\"User selected type\"\n            checkData={checkDataSelectedType}\n          />\n        </>\n      )}\n      {isDepositWallet && (\n        <>\n          <ContainerHeight height={15} />\n          <ContainerRow>\n            <ContainerFlexWidthCustom widthPercent={48}>\n              <Input\n                value={login_email}\n                setValue={(value) => setLoginEmail(value)}\n                label=\"Email Login Paylivre\"\n              />\n              <ContainerHeight height={15} />\n            </ContainerFlexWidthCustom>\n            <ContainerFlexWidthCustom widthPercent={45}>\n              <Input\n                value={password}\n                setValue={(value) => setPassword(value)}\n                label=\"Password Login Paylivre\"\n              />\n            </ContainerFlexWidthCustom>\n          </ContainerRow>\n        </>\n      )}\n      {operation === operation_withdraw &&\n        selected_type === typesList.PIX.toString() &&\n        checkIsTypeWithdrawValid(type) && (\n          <>\n            <ContainerRow>\n              <ContainerFlexWidthCustom widthPercent={48}>\n                <ContainerHeight height={25} />\n                <RadioGroup\n                  defaultCheckedValue={pix_key_type}\n                  setChecked={(value) => handleSetPixKey(value)}\n                  labelGroup=\"Pix Key Type(OPTIONAL)\"\n                  checkData={[\n                    { value: PixKeyTypes.document, label: \"CPF/CNPJ\" },\n                    { value: PixKeyTypes.phone, label: \"Phone\" },\n                    { value: PixKeyTypes.email, label: \"Email\" },\n                  ]}\n                />\n              </ContainerFlexWidthCustom>\n              <ContainerFlexWidthCustom widthPercent={48}>\n                <ContainerHeight height={30} />\n                <Input\n                  value={pix_key}\n                  setValue={(value) => setPix_key(value)}\n                  label=\"User Pix Key\"\n                />\n              </ContainerFlexWidthCustom>\n            </ContainerRow>\n            <ContainerRow>\n              <span style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n                Note: The Pix Key Type is optional, but if selected it is\n                necessary to fill in the User Pix Key Value.\n              </span>\n            </ContainerRow>\n            <ContainerRow>\n              <CustomButton\n                onClick={() => handleCleanPixKeyData()}\n                style={{\n                  width: \"30%\",\n                  textTransform: \"none\",\n                }}\n                variant=\"contained\"\n              >\n                Clear Data Pix\n              </CustomButton>\n            </ContainerRow>\n          </>\n        )}\n      <ContainerHeight height={15} />\n      <Input\n        value={callback_url}\n        setValue={(value) => setcCallback_url(value)}\n        label=\"Callback URL:\"\n      />\n      <ContainerHeight height={20} />\n      <Input\n        value={redirect_url}\n        setValue={(value) => setRedirect_url(value)}\n        label=\"Redirect URL: (OPTIONAL)\"\n      />\n      <ContainerHeight height={15} />\n      <FormLabelCustom>Environment:</FormLabelCustom>\n      <Input\n        value={base_url}\n        setValue={(value) => setBaseUrl(value)}\n        label=\"Base URL:\"\n      />\n      <ContainerHeight height={15} />\n      <Input\n        value={logo_url}\n        setValue={(value) => setLogoUrl(value)}\n        label=\"Logo URL: (OPTIONAL)\"\n      />\n      <FormLabel component=\"legend\" style={{ margin: \"0.6rem 0\" }}>\n        v{packageJson.version}\n      </FormLabel>\n    </Container>\n  );\n}\n\nexport default Form;\n","import { getRandomHash } from \"../utils/generatePropsRandom\";\n\nconst argon2 = require(\"argon2-browser\");\n\nexport async function getArgon2i(pass) {\n  const argon2i = await argon2\n    .hash({\n      pass,\n      salt: getRandomHash(14),\n      time: 2,\n      mem: 16,\n      parallelism: 1,\n      hashLen: 16,\n      type: argon2.ArgonType.Argon2i,\n    })\n    .then((hash) => hash.encoded)\n    .catch((e) => console.error(e.message, e.code));\n  return argon2i;\n}\n","export function utf8_to_b64(str) {\n  return window.btoa(unescape(encodeURIComponent(str)));\n}\n","export const DataDefaultDev = {\n  base_url: \"https://dev.gateway.paylivre.com\",\n  gateway_token: \"NHsuzedl6omTPvoxc0p7gVXc7Xthhf6Y\",\n  merchant_id: \"302\",\n  merchant_transaction_id: \"\",\n  email: \"user_gateway_test@tutanota.com\",\n  document_number: \"61317581075\",\n  api_base_url: \"https://api.dev.paylivre.com/api/v2\",\n};\n\nexport const DataDefaultPlayground = {\n  base_url: \"https://playground.gateway.paylivre.com\",\n  gateway_token: \"0c85yWaiBWx1Mclvink7suWrHoEQnH8Q\",\n  merchant_id: \"1508\",\n  merchant_transaction_id: \"\",\n  email: \"user_gateway_test@tutanota.com\",\n  document_number: \"61317581075\",\n  api_base_url: \"https://api.playground.paylivre.com/api/v2\",\n};\n\nexport const DataDefaultStaging = {\n  base_url: \"https://staging.gateway.paylivre.com\",\n  gateway_token: \"jUjoq0N8WRB95mHjmRqr0xh6lFJZy9Kn\",\n  merchant_id: \"25\",\n  merchant_transaction_id: \"\",\n  email: \"user_gateway_test@tutanota.com\",\n  document_number: \"61317581075\",\n  api_base_url: \"https://api.staging.paylivre.com/api/v2\",\n};\n","import styled from \"styled-components\";\nimport Button from \"@mui/material/Button\";\nimport { ContainerFlexWidth } from \"../styles\";\n\nexport const Container = styled.div`\n  display: flex;\n  background: #292929;\n  flex-wrap: nowrap;\n  width: auto;\n  height: auto;\n  min-height: 100px;\n  justify-content: center;\n  padding: 0 20px 10px 20px;\n  border-radius: 5px;\n  flex-direction: column;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  @media (max-width: 930px) {\n    width: 88%;\n    padding: 20px;\n  }\n`;\n\nexport const PColor = styled.p`\n  font-size: small;\n  color: ${({ color }) => color || \"#fff\"};\n  margin: 0;\n  max-width: 100%;\n  display: flex;\n  font-size: 14px;\n  word-break: break-all;\n  font-family: \"Courier New\", Courier, monospace;\n`;\n\nexport const FormLabelCustom = styled.h2`\n  font-size: 18px;\n  color: white;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\n  @media (max-width: 930px) {\n    width: 100%;\n    flex-direction: column;\n    margin: 5px 0;\n  }\n`;\n\nexport const CustomButton = styled(Button)`\n  @media (max-width: 930px) {\n    width: 100%;\n  }\n`;\n","import React from \"react\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\nimport \"react-notifications/lib/notifications.css\";\nimport copyToClipboard from \"copy-to-clipboard\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nimport JSONPretty from \"react-json-pretty\";\nimport \"./jsonStyle.css\";\nimport {\n  Container,\n  PColor,\n  FormLabelCustom,\n  ContainerFlexWidthCustom,\n  CustomButton,\n} from \"./styles\";\nimport { ContainerRow } from \"../styles\";\n\nimport { useForceReloadData } from \"../../contexts/forceReloadData\";\n\nfunction RequestJson({\n  dataRequest,\n  url,\n  urlGateway,\n  label,\n  textButton,\n  type,\n  baseUrl,\n  isDevLocalhost,\n  devLocalhostPort,\n  ...rest\n}) {\n  const { disable, setDisable } = useForceReloadData();\n\n  function getLocahostBaseUrl() {\n    const portDefault = \"3000\";\n    const port = devLocalhostPort !== null ? devLocalhostPort : portDefault;\n    return `http://localhost:${port}`;\n  }\n\n  function getUrlGateway() {\n    if (isDevLocalhost) {\n      return urlGateway.replace(baseUrl, getLocahostBaseUrl());\n    }\n    return urlGateway;\n  }\n\n  function handleCopyToClipboard() {\n    if (!disable) {\n      const dataRequestJson = JSON.stringify({ ...dataRequest, url });\n      const textToCopy = type === \"url\" ? getUrlGateway() : dataRequestJson;\n      copyToClipboard(textToCopy);\n      const textToNotification = type === \"url\" ? \"Copied URL\" : \"JSON Copied\";\n      NotificationManager.success(textToNotification, \"\", 1000);\n      setDisable(true);\n    }\n  }\n\n  const IconButtonMain = type === \"url\" ? OpenInNewIcon : ContentCopyIcon;\n\n  function handleOpenUrlNewWindow() {\n    if (!disable) {\n      window.open(getUrlGateway());\n      setDisable(true);\n    }\n  }\n\n  function handleButtonAction() {\n    if (type === \"url\") {\n      handleOpenUrlNewWindow();\n    } else {\n      handleCopyToClipboard();\n    }\n  }\n\n  return (\n    <Container {...rest}>\n      <ContainerRow style={{ alignItems: \"center\", paddingTop: 10 }}>\n        <ContainerFlexWidthCustom widthPercent={50}>\n          <FormLabelCustom>{label}</FormLabelCustom>\n        </ContainerFlexWidthCustom>\n        <ContainerFlexWidthCustom widthPercent={50}>\n          <CustomButton\n            disabled={disable}\n            endIcon={<IconButtonMain />}\n            onClick={() => handleButtonAction()}\n            style={{ width: \"100%\", textTransform: \"none\" }}\n            variant=\"contained\"\n          >\n            {textButton}\n          </CustomButton>\n        </ContainerFlexWidthCustom>\n        {type === \"url\" && (\n          <ContainerFlexWidthCustom\n            widthPercent={50}\n            style={{ marginLeft: 20, maxWidth: 140 }}\n          >\n            <CustomButton\n              disabled={disable}\n              endIcon={<ContentCopyIcon />}\n              onClick={() => handleCopyToClipboard()}\n              style={{\n                width: \"100%\",\n                textTransform: \"none\",\n                background: \"#fff\",\n              }}\n              variant=\"outlined\"\n            >\n              Copy URL\n            </CustomButton>\n          </ContainerFlexWidthCustom>\n        )}\n      </ContainerRow>\n\n      <NotificationContainer />\n\n      {dataRequest && (\n        <JSONPretty id=\"json-pretty\" data={{ ...dataRequest, url }} />\n      )}\n\n      {urlGateway && <PColor color=\"#ffff80\">{getUrlGateway()}</PColor>}\n    </Container>\n  );\n}\n\nexport default RequestJson;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  background: transparent;\n  flex-wrap: wrap;\n  width: auto;\n  height: auto;\n  padding: 20px;\n  border-radius: 5px;\n  flex-direction: column;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  @media (max-width: 930px) {\n    width: 88%;\n    padding: 20px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 18px;\n  color: grey;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const ListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  font-size: small;\n  color: ${(props) => props.isEmpty && \"#be453a\"};\n  margin: 0;\n  max-width: 100%;\n  display: flex;\n  font-size: 1.2rem;\n  word-break: break-all;\n  margin: 0.2rem 0;\n  /* font-family: \"Courier New\", Courier, monospace; */\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const Alert = styled.h2`\n  font-size: 18px;\n  color: #be453a;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const Legend = styled.p`\n  font-size: 1rem;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const AlertContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  background: transparent;\n  flex-wrap: wrap;\n  width: auto;\n  height: auto;\n  padding: 5px 20px;\n  border-radius: 5px;\n  flex-direction: column;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);\n  @media (max-width: 930px) {\n    width: 88%;\n    padding: 20px;\n  }\n`;\n","import { Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { ContainerFlexWidth } from \"../styles\";\nimport {\n  Alert,\n  AlertContainer,\n  Container,\n  Legend,\n  ListContainer,\n  ListItem,\n  SectionTitle,\n} from \"./styles\";\n\nconst UrlParametersList = ({ parameters, baseUrl, requiredFields }) => {\n  const validationArray = [];\n\n  Object.entries(parameters).forEach((param) =>\n    validationArray.push(\n      requiredFields.includes(param[0]) && param[1].length === 0\n    )\n  );\n\n  function renderParametersItem(param, index) {\n    const isRequired = requiredFields.includes(param[0]);\n    const isEmpty = param[1].length === 0;\n    return (\n      <ListItem key={index} isEmpty={isEmpty}>\n        {isRequired && \"* \"}\n        {`${param[0]} = ${param[1]}`}\n      </ListItem>\n    );\n  }\n\n  function renderAlert() {\n    return (\n      <AlertContainer>\n        {validationArray.includes(true) && (\n          <Alert>All mandatory fields must be filled!</Alert>\n        )}\n        <Typography style={{ marginTop: 10 }} component=\"p\">\n          Legend:\n        </Typography>\n        <Legend>* - Mandatory field</Legend>\n      </AlertContainer>\n    );\n  }\n\n  return (\n    <Container>\n      {validationArray.includes(true) && renderAlert()}\n      <ContainerFlexWidth>\n        <SectionTitle>Url Parameters</SectionTitle>\n        <ListContainer>\n          <ListItem>{baseUrl}</ListItem>\n          <br />\n          {Object.entries(parameters).map((param, index) =>\n            renderParametersItem(param, index)\n          )}\n        </ListContainer>\n      </ContainerFlexWidth>\n      {!validationArray.includes(true) && renderAlert()}\n    </Container>\n  );\n};\n\nexport default UrlParametersList;\n","/* eslint-disable no-unused-expressions */\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Form from \"./components/Form\";\nimport { getArgon2i } from \"../../services/argon2i\";\nimport { utf8_to_b64 } from \"../../utils/base64\";\nimport {\n  DataDefaultDev,\n  DataDefaultPlayground,\n  DataDefaultStaging,\n} from \"../../data/formDataDefault\";\nimport {\n  Container,\n  ContainerResult,\n  CustomButton,\n  ContainerFlexWidthCustom,\n} from \"./styles\";\nimport { ContainerRow } from \"../../components/styles\";\nimport RequestJson from \"../../components/RequestJson\";\nimport UrlParametersList from \"../../components/UrlParametersList\";\nimport { operation_withdraw } from \"../../data/types\";\n\nconst requiredFields = [\n  \"merchant_id\",\n  \"operation\",\n  \"merchant_transaction_id\",\n  \"amount\",\n  \"currency\",\n  \"mock_type\",\n  \"account_id\",\n  \"mock_auto_approve\",\n  \"callback_url\",\n  \"type\",\n  \"auto_approve\",\n  \"signature\",\n];\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction App() {\n  const query = useQuery();\n  const isDev = query.get(\"dev\") === \"1\";\n  const isDevPlayground = query.get(\"playground\") === \"1\";\n  const isDevLocalhost = query.get(\"localhost\") === \"1\";\n  const isDevStaging = query.get(\"staging\") === \"1\";\n  const devLocalhostPort = query.get(\"localhost_port\");\n\n  const dataDefault = !isDev\n    ? DataDefaultPlayground\n    : isDevPlayground\n    ? DataDefaultPlayground\n    : isDevStaging\n    ? DataDefaultStaging\n    : DataDefaultDev;\n\n  const [base_url, setBaseUrl] = React.useState(dataDefault.base_url);\n  const [data, setData] = React.useState({});\n  const [gateway_token, setGateway_token] = React.useState(\n    dataDefault.gateway_token\n  );\n  const [urlGenerated, setUrlGenerated] = React.useState(false);\n  const [url, setURL] = React.useState(\"\");\n  const [urlGateway, setUrlGateway] = React.useState(\"\");\n  const [typeFormSelected, setTypeFormSelected] = React.useState(\"url\");\n  const [urlGatewayParameters, setUrlGatewayParameters] = React.useState({});\n\n  function handleUrlGatewayParameters(OBJ_DataURL, STRING_Signature) {\n    if (!!OBJ_DataURL.pix_key && !!OBJ_DataURL.pix_key_type) {\n      setUrlGatewayParameters({\n        merchant_transaction_id: OBJ_DataURL.merchant_transaction_id,\n        merchant_id: OBJ_DataURL.merchant_id,\n        account_id: OBJ_DataURL.account_id,\n        amount: OBJ_DataURL.amount,\n        currency: OBJ_DataURL.currency,\n        operation: OBJ_DataURL.operation,\n        callback_url: OBJ_DataURL.callback_url,\n        redirect_url: OBJ_DataURL.redirect_url,\n        type: OBJ_DataURL.type,\n        auto_approve: OBJ_DataURL.auto_approve,\n        signature: STRING_Signature || \"\",\n        logoUrl: OBJ_DataURL.logo_url ? OBJ_DataURL.logo_url : \"\",\n        email: OBJ_DataURL.email ? OBJ_DataURL.email : \"\",\n        document_number: OBJ_DataURL.document_number\n          ? OBJ_DataURL.document_number\n          : \"\",\n        pix_key: OBJ_DataURL.pix_key,\n        pix_key_type: OBJ_DataURL.pix_key_type,\n      });\n    } else {\n      setUrlGatewayParameters({\n        merchant_transaction_id: OBJ_DataURL.merchant_transaction_id,\n        merchant_id: OBJ_DataURL.merchant_id,\n        account_id: OBJ_DataURL.account_id,\n        amount: OBJ_DataURL.amount,\n        currency: OBJ_DataURL.currency,\n        operation: OBJ_DataURL.operation,\n        callback_url: OBJ_DataURL.callback_url,\n        redirect_url: OBJ_DataURL.redirect_url,\n        type: OBJ_DataURL.type,\n        auto_approve: OBJ_DataURL.auto_approve,\n        signature: STRING_Signature || \"\",\n        logoUrl: OBJ_DataURL.logo_url ? OBJ_DataURL.logo_url : \"\",\n        email: OBJ_DataURL.email ? OBJ_DataURL.email : \"\",\n        document_number: OBJ_DataURL.document_number\n          ? OBJ_DataURL.document_number\n          : \"\",\n      });\n    }\n  }\n\n  function getUrlGateway(DataURL, signature) {\n    handleUrlGatewayParameters(DataURL, signature);\n\n    const merchant_transaction_id = `merchant_transaction_id=${DataURL.merchant_transaction_id}`;\n    const merchant_id = `merchant_id=${DataURL.merchant_id}`;\n    const account_id = `account_id=${DataURL.account_id}`;\n    const amount = `amount=${DataURL.amount}`;\n    const currency = `currency=${DataURL.currency}`;\n    const operation = `operation=${DataURL.operation}`;\n    const callback_url = `callback_url=${DataURL.callback_url}`;\n    const redirect_url = `redirect_url=${DataURL.redirect_url}`;\n    const mock_type = `type=${DataURL.type}`;\n    const mock_auto_approve = `auto_approve=${DataURL.auto_approve}`;\n    const Signature = signature ? `&signature=${signature}` : \"\";\n    const logoUrl = DataURL.logo_url ? `&logo_url=${DataURL.logo_url}` : \"\";\n    const email = DataURL.email ? `&email=${DataURL.email}` : \"\";\n    const document_number = DataURL.document_number\n      ? `&document_number=${DataURL.document_number}`\n      : \"\";\n    const pix_key = DataURL.pix_key ? `&pix_key=${DataURL.pix_key}` : null;\n    const pix_key_type = DataURL.pix_key_type\n      ? `&pix_key_type=${DataURL.pix_key_type}`\n      : null;\n    let UrlGateway = null;\n\n    if (\n      DataURL.operation === operation_withdraw &&\n      !!DataURL.pix_key &&\n      !!DataURL.pix_key_type\n    ) {\n      UrlGateway = `${base_url}?${merchant_transaction_id}&${merchant_id}&${operation}${email}${document_number}&${amount}&${currency}${pix_key_type}${pix_key}&${mock_type}&${account_id}&${callback_url}&${redirect_url}&${mock_auto_approve}${Signature}${logoUrl}`;\n    } else {\n      UrlGateway = `${base_url}?${merchant_transaction_id}&${merchant_id}&${operation}${email}${document_number}&${amount}&${currency}&${mock_type}&${account_id}&${callback_url}&${redirect_url}&${mock_auto_approve}${Signature}${logoUrl}`;\n    }\n\n    return UrlGateway;\n  }\n\n  async function handleGenerateSignature() {\n    const urlWithoutSignature = getUrlGateway(data);\n    const valueToGetArgon2iHash = gateway_token + urlWithoutSignature;\n    const argon2iHash = await getArgon2i(valueToGetArgon2iHash);\n    const signature = utf8_to_b64(argon2iHash);\n\n    setURL(urlWithoutSignature);\n\n    setUrlGateway(getUrlGateway(data, signature));\n\n    setData((oldData) => {\n      return { ...oldData, signature };\n    });\n    setUrlGenerated(true);\n  }\n\n  return (\n    <>\n      {isDev && (\n        <ContainerRow style={{ justifyContent: \"center\" }}>\n          <ContainerFlexWidthCustom\n            widthPercent={20}\n            style={{ marginRight: 20, marginBottom: 20 }}\n          >\n            <CustomButton\n              onClick={() => setTypeFormSelected(\"url\")}\n              style={{\n                width: \"100%\",\n                textTransform: \"none\",\n                background: typeFormSelected === \"url\" ? \"#1976d2\" : \"#c4c4c4\",\n              }}\n              variant=\"contained\"\n            >\n              Selected Form to URL\n            </CustomButton>\n          </ContainerFlexWidthCustom>\n\n          <ContainerFlexWidthCustom widthPercent={20}>\n            <CustomButton\n              onClick={() => setTypeFormSelected(\"json\")}\n              style={{\n                width: \"100%\",\n                textTransform: \"none\",\n                background: typeFormSelected === \"json\" ? \"#1976d2\" : \"#c4c4c4\",\n              }}\n              variant=\"contained\"\n            >\n              Select Form to Request JSON\n            </CustomButton>\n          </ContainerFlexWidthCustom>\n        </ContainerRow>\n      )}\n      <Container>\n        <Form\n          dataDefault={dataDefault}\n          base_url={base_url}\n          setBaseUrl={setBaseUrl}\n          gateway_token={gateway_token}\n          setGateway_token={setGateway_token}\n          data={data}\n          setUrlGenerated={setUrlGenerated}\n          handleGenerateURL={() => handleGenerateSignature()}\n          setData={setData}\n          typeFormSelected={typeFormSelected}\n        />\n        <ContainerResult>\n          {urlGenerated && (\n            <>\n              {typeFormSelected === \"url\" && (\n                <RequestJson\n                  type={typeFormSelected}\n                  style={{ marginBottom: 20 }}\n                  urlGateway={urlGateway}\n                  label=\"URL to Gateway Web:\"\n                  textButton=\"Open URL Gateway\"\n                  baseUrl={dataDefault.base_url}\n                  isDevLocalhost={isDevLocalhost}\n                  devLocalhostPort={devLocalhostPort}\n                />\n              )}\n\n              {typeFormSelected === \"json\" && (\n                <RequestJson\n                  type={typeFormSelected}\n                  style={{ marginBottom: 20 }}\n                  dataRequest={data}\n                  url={url}\n                  label=\"JSON Post Request:\"\n                  textButton=\"Copy JSON\"\n                  baseUrl={dataDefault.base_url}\n                  isDevLocalhost={isDevLocalhost}\n                  devLocalhostPort={devLocalhostPort}\n                />\n              )}\n            </>\n          )}\n          <CustomButton\n            size=\"large\"\n            onClick={() => handleGenerateSignature()}\n            style={{\n              width: \"100%\",\n              textTransform: \"none\",\n              minWidth: \"100%\",\n              marginRight: 0,\n            }}\n            variant=\"contained\"\n          >\n            {`Generate ${typeFormSelected.toUpperCase()}`}\n          </CustomButton>\n          {urlGenerated && (\n            <UrlParametersList\n              baseUrl={base_url}\n              parameters={urlGatewayParameters}\n              requiredFields={requiredFields}\n            />\n          )}\n        </ContainerResult>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import styled from \"styled-components\";\n\nexport const ContainerRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: auto;\n  @media (max-width: 930px) {\n    flex-direction: column;\n  }\n`;\n\nexport const ContainerFlexWidth = styled.div`\n  width: ${({ widthPercent }) => (widthPercent ? `${widthPercent}%` : \"100%\")};\n  flex-direction: row;\n  height: auto;\n  @media (max-width: 930px) {\n    flex-direction: column;\n  }\n`;\n","import styled from \"styled-components\";\nimport { ContainerFlexWidth } from \"../styles\";\n\nexport const Container = styled.div`\n  width: 45%;\n  height: auto;\n  justify-content: center;\n  align-items: center;\n  padding: 0px 20px 20px 20px;\n  background-color: #ffffff;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  @media (max-width: 930px) {\n    width: 100%;\n    padding: 10px;\n  }\n`;\n\nexport const ContainerHeight = styled.div`\n  width: 100%;\n  height: ${({ height }) => (height ? `${height}px` : 0)};\n  min-height: ${({ height }) => (height ? `${height}px` : 0)};\n`;\n\nexport const ContainerCheckTypes = styled.div`\n  width: 100%;\n  flex-direction: row;\n  height: auto;\n`;\n\nexport const FormLabelCustom = styled.h2`\n  font-size: 18px;\n  color: grey;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\n  @media (max-width: 930px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport { Breadcrumbs, Link, Typography } from \"@mui/material\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Container,\n  FormLabelCustom,\n  ContainerHeight,\n  ContainerFlexWidthCustom,\n} from \"./styles\";\n\nimport { ContainerRow } from \"../styles\";\n\nimport RadioGroup from \"../../../../components/RadioGroup\";\nimport { PixKeyTypes } from \"../../../../utils/pixKeyTypes\";\nimport { typesList } from \"../../../../utils/typesUtils\";\nimport { getRandomMerchantTransactionId } from \"../../../../utils/generatePropsRandom\";\nimport { useForceReloadData } from \"../../../../contexts/forceReloadData\";\nimport Input from \"../../../../components/Input\";\nimport InputSwitch from \"../../../../components/Switch\";\nimport packageJson from \"../../../../../package.json\";\nimport { operation_deposit, operation_withdraw } from \"../../../../data/types\";\n\nconst typesAvailableDefault = [\n  {\n    value: typesList.PIX.toString(),\n    label: \"Pix\",\n  },\n  {\n    value: typesList.WALLET.toString(),\n    label: \"Paylivre Wallet\",\n  },\n];\n\nfunction getTypesAvailables(Operation) {\n  if (Operation === operation_withdraw) {\n    return typesAvailableDefault;\n  }\n  return [\n    ...typesAvailableDefault,\n    {\n      value: typesList.BILLET.toString(),\n      label: \"Billet\",\n    },\n    {\n      value: typesList.WIRETRANFER.toString(),\n      label: \"Wire Transfer\",\n    },\n  ];\n}\n\nfunction getOperationsAvailable(isDev) {\n  if (isDev === true) {\n    return [\n      { value: \"5\", label: \"Withdraw\" },\n      { value: \"0\", label: \"Deposit\" },\n    ];\n  }\n  return [{ value: \"5\", label: \"Withdraw\" }];\n}\n\nfunction Form({\n  setData,\n  setGateway_token,\n  gateway_token,\n  setUrlGenerated,\n  base_url,\n  setBaseUrl,\n  dataDefault,\n  isDev,\n}) {\n  const [merchant_id, setMerchantId] = useState(dataDefault.merchant_id);\n  const [merchant_transaction_id, setMerchantTransactionId] = useState(\n    getRandomMerchantTransactionId()\n  );\n  const [email, setEmail] = useState(dataDefault.email);\n  const [document_number, setDocumentNumber] = useState(\n    dataDefault.document_number\n  );\n  const [account_id, setAccountId] = useState(\"123654asd\");\n  const [currency, setCurrency] = useState(\"BRL\");\n  const [operation, setOperation] = useState(operation_withdraw);\n  const [amount, setAmount] = useState(\"500\");\n  const [callback_url, setcCallback_url] = useState(\n    \"https://api.dev.paylivre.com/dev/v2/callback\"\n  );\n  const [type, setType] = useState(\"1\");\n  const [pix_key_type, setPix_key_type] = useState(PixKeyTypes.document);\n  const [pix_key, setPix_key] = useState(\"\");\n  const [login_email, setLoginEmail] = useState(dataDefault.email);\n  const [password, setPassword] = useState(\"123123123\");\n  const [auto_approve, setAuto_approve] = useState(true);\n  const { disable, setDisable } = useForceReloadData();\n\n  function checkIsTypeWithdrawValid(Type) {\n    switch (Type) {\n      case \"1\": {\n        return true;\n      }\n      case \"9\": {\n        return true;\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n\n  function setOperationAndSetTypeDefault(Operation) {\n    setOperation(Operation);\n    setType(typesList.PIX.toString());\n  }\n\n  const isDepositWallet =\n    operation === operation_deposit && type === typesList.WALLET.toString();\n\n  function handleSetPixKey(string_value) {\n    if (string_value === PixKeyTypes.document) {\n      setPix_key_type(PixKeyTypes.document);\n      setPix_key(document_number);\n    }\n\n    if (string_value === PixKeyTypes.email) {\n      setPix_key_type(PixKeyTypes.email);\n      setPix_key(email);\n    }\n\n    if (string_value === PixKeyTypes.phone) {\n      setPix_key_type(PixKeyTypes.phone);\n      setPix_key(\"\");\n    }\n  }\n\n  const setDefaultData = useCallback((DataDefault) => {\n    setOperation(operation_withdraw);\n    setMerchantId(DataDefault.merchant_id);\n    setGateway_token(DataDefault.gateway_token);\n    setBaseUrl(DataDefault.base_url);\n  }, []);\n\n  useEffect(() => {\n    setDefaultData(dataDefault);\n  }, [useLocation().search, dataDefault]);\n\n  useEffect(() => {\n    if (operation === operation_withdraw) {\n      handleSetPixKey(PixKeyTypes.document);\n    }\n  }, [operation, type]);\n\n  useEffect(() => {\n    if (type === typesList.PIX.toString()) {\n      handleSetPixKey(PixKeyTypes.document);\n    }\n  }, [type]);\n\n  function getNumberIfNotEmpty(valueString) {\n    return valueString.toString().length > 0 ? Number(valueString) : \"\";\n  }\n\n  useEffect(() => {\n    // Toda vez que alterar algum dado no data\n    setUrlGenerated(false);\n    setDisable(false);\n\n    const isWithdrawPix =\n      operation === operation_withdraw && type === typesList.PIX.toString();\n\n    function getType() {\n      return type;\n    }\n\n    function getNewData(oldData) {\n      const newData = {\n        ...oldData,\n        account_id,\n        amount: getNumberIfNotEmpty(amount),\n        auto_approve: auto_approve === true ? 1 : 0,\n        callback_url,\n        currency,\n        document_number,\n        email,\n        merchant_id: getNumberIfNotEmpty(merchant_id),\n        operation: getNumberIfNotEmpty(operation),\n        merchant_transaction_id,\n        type: getNumberIfNotEmpty(getType()),\n        login_email: isDepositWallet ? login_email : \"\",\n        password: isDepositWallet ? password : \"\",\n      };\n\n      if (isWithdrawPix) {\n        newData.pix_key_type = isWithdrawPix ? pix_key_type : \"\";\n        newData.pix_key = isWithdrawPix ? pix_key : \"\";\n      } else {\n        delete newData.pix_key_type;\n        delete newData.pix_key;\n      }\n\n      if (isDepositWallet) {\n        newData.login_email = isDepositWallet ? login_email : \"\";\n        newData.password = isDepositWallet ? password : \"\";\n      } else {\n        delete newData.login_email;\n        delete newData.password;\n      }\n\n      return newData;\n    }\n\n    setData((oldData) => {\n      return getNewData(oldData);\n    });\n  }, [\n    setData,\n    merchant_id,\n    merchant_transaction_id,\n    email,\n    document_number,\n    account_id,\n    auto_approve,\n    currency,\n    operation,\n    amount,\n    callback_url,\n    setUrlGenerated,\n    gateway_token,\n    base_url,\n    type,\n    pix_key_type,\n    pix_key,\n    password,\n    login_email,\n  ]);\n\n  function handleReloadRandomFormatData() {\n    setMerchantTransactionId(getRandomMerchantTransactionId());\n    setDisable(false);\n  }\n\n  function isAutoApproveSelected() {\n    return auto_approve === true ? (\n      <Typography component=\"span\" color=\"primary\">\n        true\n      </Typography>\n    ) : (\n      <Typography component=\"span\" color=\"error\">\n        false\n      </Typography>\n    );\n  }\n\n  return (\n    <Container>\n      <ContainerRow\n        style={{ marginBottom: 0, height: 50, alignItems: \"center\" }}\n      >\n        <Breadcrumbs aria-label=\"breadcrumb\">\n          <Link href=\"/gateway-example-javascript/#/\">Url Gateway</Link>\n          <Typography color=\"text.primary\">Withdraw API</Typography>\n        </Breadcrumbs>\n      </ContainerRow>\n\n      <FormLabelCustom>Environment:</FormLabelCustom>\n      <Input\n        value={base_url}\n        setValue={(value) => setBaseUrl(value)}\n        label=\"Base URL:\"\n      />\n\n      <ContainerRow\n        style={{\n          marginBottom: 20,\n          marginTop: 10,\n          height: 50,\n          alignItems: \"center\",\n        }}\n      >\n        <ContainerFlexWidthCustom widthPercent={48}>\n          <FormLabelCustom style={{ margin: 0 }}>\n            Merchant Data:\n          </FormLabelCustom>\n        </ContainerFlexWidthCustom>\n        <ContainerFlexWidthCustom widthPercent={50} style={{}}>\n          <Button\n            onClick={() => handleReloadRandomFormatData()}\n            style={{\n              width: \"100%\",\n              textTransform: \"none\",\n            }}\n            variant={disable === true ? \"contained\" : \"outlined\"}\n            color=\"success\"\n          >\n            Reload Random Data\n          </Button>\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n      <ContainerRow>\n        <ContainerFlexWidthCustom widthPercent={48}>\n          <Input\n            value={merchant_id}\n            setValue={(value) => setMerchantId(value)}\n            label=\"Merchant ID:\"\n            type=\"number\"\n          />\n          <ContainerHeight height={15} />\n        </ContainerFlexWidthCustom>\n        <ContainerFlexWidthCustom widthPercent={45}>\n          <Input\n            value={merchant_transaction_id}\n            setValue={(value) => setMerchantTransactionId(value)}\n            label=\"Merchant Transaction ID:\"\n          />\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n      <ContainerHeight height={5} />\n      <Input\n        value={gateway_token}\n        setValue={(value) => setGateway_token(value)}\n        label=\"Gateway Token:\"\n      />\n      <FormLabelCustom>User Data:</FormLabelCustom>\n      <Input\n        value={email}\n        setValue={(value) => setEmail(value)}\n        label=\"User Email: (OPTIONAL)\"\n      />\n      <ContainerHeight height={20} />\n      <ContainerRow>\n        <ContainerFlexWidthCustom widthPercent={48}>\n          <Input\n            value={document_number}\n            setValue={(value) => setDocumentNumber(value)}\n            label=\"User Document - CPF/CNPJ: (OPTIONAL)\"\n          />\n        </ContainerFlexWidthCustom>\n\n        <ContainerFlexWidthCustom widthPercent={48}>\n          <Input\n            value={account_id}\n            setValue={(value) => setAccountId(value)}\n            label=\"User Account ID in Merchant:\"\n          />\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n      <FormLabelCustom>Transaction Data:</FormLabelCustom>\n      <ContainerRow>\n        <ContainerFlexWidthCustom widthPercent={50}>\n          <Input\n            value={amount}\n            setValue={(value) => setAmount(value)}\n            label=\"Amount:\"\n            type=\"number\"\n          />\n        </ContainerFlexWidthCustom>\n        <ContainerHeight height={15} />\n        <ContainerFlexWidthCustom widthPercent={60}>\n          <InputSwitch\n            label=\"Auto approve\"\n            checked={auto_approve}\n            onChange={(event) => setAuto_approve(event.target.checked)}\n          />\n          {isAutoApproveSelected()}\n        </ContainerFlexWidthCustom>\n        <ContainerFlexWidthCustom widthPercent={60}>\n          <RadioGroup\n            defaultCheckedValue={currency}\n            setChecked={(value) => setCurrency(value)}\n            labelGroup=\"Currency\"\n            checkData={[\n              { value: \"BRL\", label: \"BRL\" },\n              { value: \"USD\", label: \"USD\" },\n            ]}\n          />\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n      <ContainerHeight height={15} />\n      <RadioGroup\n        defaultCheckedValue={operation}\n        setChecked={(value) => setOperationAndSetTypeDefault(value)}\n        labelGroup=\"Operation\"\n        checkData={getOperationsAvailable(isDev)}\n      />\n      <ContainerHeight height={15} />\n\n      <ContainerHeight height={15} />\n      <RadioGroup\n        defaultCheckedValue={type}\n        setChecked={(value) => setType(value)}\n        labelGroup=\"Type passed by merchant\"\n        checkData={getTypesAvailables(operation)}\n      />\n\n      {isDepositWallet && (\n        <>\n          <ContainerHeight height={15} />\n          <ContainerRow>\n            <ContainerFlexWidthCustom widthPercent={48}>\n              <Input\n                value={login_email}\n                setValue={(value) => setLoginEmail(value)}\n                label=\"Email Login Paylivre\"\n              />\n              <ContainerHeight height={15} />\n            </ContainerFlexWidthCustom>\n            <ContainerFlexWidthCustom widthPercent={45}>\n              <Input\n                value={password}\n                setValue={(value) => setPassword(value)}\n                label=\"Password Login Paylivre\"\n              />\n            </ContainerFlexWidthCustom>\n          </ContainerRow>\n        </>\n      )}\n      {operation === operation_withdraw &&\n        type === typesList.PIX.toString() &&\n        checkIsTypeWithdrawValid(type) && (\n          <>\n            <ContainerRow>\n              <ContainerFlexWidthCustom widthPercent={48}>\n                <ContainerHeight height={25} />\n                <RadioGroup\n                  defaultCheckedValue={pix_key_type}\n                  setChecked={(value) => handleSetPixKey(value)}\n                  labelGroup=\"Pix Key Type(OPTIONAL)\"\n                  checkData={[\n                    { value: PixKeyTypes.document, label: \"CPF/CNPJ\" },\n                    { value: PixKeyTypes.phone, label: \"Phone\" },\n                    { value: PixKeyTypes.email, label: \"Email\" },\n                  ]}\n                />\n              </ContainerFlexWidthCustom>\n              <ContainerFlexWidthCustom widthPercent={48}>\n                <ContainerHeight height={30} />\n                <Input\n                  value={pix_key}\n                  setValue={(value) => setPix_key(value)}\n                  label=\"User Pix Key\"\n                />\n              </ContainerFlexWidthCustom>\n            </ContainerRow>\n          </>\n        )}\n      <ContainerHeight height={15} />\n      <Input\n        value={callback_url}\n        setValue={(value) => setcCallback_url(value)}\n        label=\"Callback URL:\"\n      />\n      <FormLabel component=\"legend\" style={{ margin: \"0.6rem 0\" }}>\n        v{packageJson.version}\n      </FormLabel>\n    </Container>\n  );\n}\n\nexport default Form;\n","import styled from \"styled-components\";\nimport Button from \"@mui/material/Button\";\nimport { ContainerFlexWidth } from \"../../components/styles\";\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 10px;\n  background: #fff;\n  justify-content: center;\n  align-items: flex-start;\n  flex-direction: row;\n  @media (max-width: 930px) {\n    flex-direction: column;\n    padding: 20px;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const ContainerResult = styled.div`\n  width: 40%;\n  margin-left: 20px;\n  height: auto;\n  justify-content: center;\n  align-items: center;\n  padding: 0px 20px 20px 20px;\n  background-color: #ffffff;\n  border-radius: 5px;\n  @media (max-width: 930px) {\n    width: 100%;\n    margin-left: 0px;\n  }\n`;\n\nexport const CustomButton = styled(Button)`\n  @media (max-width: 930px) {\n    width: 100%;\n  }\n`;\n\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\n  @media (max-width: 930px) {\n    width: 100%;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n","import styled from \"styled-components\";\nimport Button from \"@mui/material/Button\";\nimport { ContainerFlexWidth } from \"../styles\";\n\nexport const Container = styled.div`\n  display: flex;\n  background: #292929;\n  flex-wrap: nowrap;\n  width: auto;\n  height: auto;\n  min-height: 100px;\n  justify-content: center;\n  padding: 0 20px 10px;\n  border-radius: 5px;\n  flex-direction: column;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  @media (max-width: 930px) {\n    width: 88%;\n    padding: 20px;\n  }\n  margin-bottom: 20px;\n`;\n\nexport const PColor = styled.p`\n  font-size: small;\n  color: ${({ color }) => color || \"#fff\"};\n  margin: 0;\n  max-width: 100%;\n  display: flex;\n  font-size: 14px;\n  word-break: break-all;\n  font-family: \"Courier New\", Courier, monospace;\n`;\n\nexport const FormLabelCustom = styled.h2`\n  font-size: 18px;\n  color: white;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const FlagPost = styled.div`\n  display: flex;\n  background: #ffdd3c;\n  padding: 5px;\n  width: 60px;\n  justify-content: center;\n  margin-right: 10px;\n`;\n\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\n  @media (max-width: 930px) {\n    width: 100%;\n    flex-direction: column;\n    margin: 5px 0;\n  }\n`;\n\nexport const CustomButton = styled(Button)`\n  @media (max-width: 930px) {\n    width: 100%;\n  }\n`;\n","import React from \"react\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport \"react-notifications/lib/notifications.css\";\nimport copyToClipboard from \"copy-to-clipboard\";\nimport { NotificationManager } from \"react-notifications\";\nimport \"./jsonStyle.css\";\nimport { Typography } from \"@mui/material\";\nimport {\n  Container,\n  PColor,\n  FormLabelCustom,\n  ContainerFlexWidthCustom,\n  CustomButton,\n  FlagPost,\n} from \"./styles\";\nimport { ContainerRow } from \"../styles\";\n\nimport { useForceReloadData } from \"../../../../contexts/forceReloadData\";\n\nfunction UrlApi({ dataDefault }) {\n  const { disable } = useForceReloadData();\n  const base_url = `${dataDefault.api_base_url}/merchant/payments`;\n  function handleCopyToClipboard() {\n    if (!disable) {\n      copyToClipboard(base_url);\n      const textToNotification = \"Copied URL\";\n      NotificationManager.success(textToNotification, \"\", 1000);\n    }\n  }\n\n  const IconButtonMain = ContentCopyIcon;\n\n  function handleButtonAction() {\n    handleCopyToClipboard();\n  }\n\n  return (\n    <Container>\n      <ContainerRow style={{ alignItems: \"center\", marginBottom: 0 }}>\n        <ContainerFlexWidthCustom widthPercent={50} style={{ paddingTop: 0 }}>\n          <ContainerRow\n            style={{\n              alignItems: \"center\",\n              paddingTop: 10,\n              marginBottom: 10,\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <FlagPost>\n              <Typography color=\"primary\">POST</Typography>\n            </FlagPost>\n            <FormLabelCustom>JSON Post Url:</FormLabelCustom>\n          </ContainerRow>\n        </ContainerFlexWidthCustom>\n        <ContainerFlexWidthCustom widthPercent={50}>\n          <CustomButton\n            disabled={disable}\n            endIcon={<IconButtonMain />}\n            onClick={() => handleButtonAction()}\n            style={{ width: \"100%\", textTransform: \"none\" }}\n            variant=\"contained\"\n          >\n            Copy URL API\n          </CustomButton>\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n\n      <PColor color=\"#ffff80\">{base_url}</PColor>\n    </Container>\n  );\n}\n\nexport default UrlApi;\n","/* eslint-disable no-unused-expressions */\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Form from \"./components/Form\";\nimport { getArgon2i } from \"../../services/argon2i\";\nimport { utf8_to_b64 } from \"../../utils/base64\";\nimport {\n  DataDefaultDev,\n  DataDefaultPlayground,\n  DataDefaultStaging,\n} from \"../../data/formDataDefault\";\nimport { Container, ContainerResult, CustomButton } from \"./styles\";\nimport UrlParametersList from \"../../components/UrlParametersList\";\nimport { operation_deposit, operation_withdraw } from \"../../data/types\";\nimport RequestJson from \"../../components/RequestJson\";\nimport UrlApi from \"./components/UrlApi\";\nimport { typesList } from \"../../utils/typesUtils\";\n\nexport const requiredFieldsDefault = [\n  \"merchant_id\",\n  \"operation\",\n  \"merchant_transaction_id\",\n  \"amount\",\n  \"currency\",\n  \"mock_type\",\n  \"account_id\",\n  \"mock_auto_approve\",\n  \"callback_url\",\n  \"type\",\n  \"auto_approve\",\n  \"signature\",\n];\n\nexport const requiredFieldsDefaultWithdrawPix = [\n  ...requiredFieldsDefault,\n  \"pix_key_type\",\n  \"pix_key\",\n];\n\nexport const requiredFieldsDefaultDepositWallet = [\n  ...requiredFieldsDefault,\n  \"login_email\",\n  \"password\",\n];\n\nfunction getRequiredFieldsDefault(isWithdrawPix, isDepositWallet) {\n  if (isWithdrawPix) {\n    return requiredFieldsDefaultWithdrawPix;\n  }\n  if (isDepositWallet) {\n    return requiredFieldsDefaultDepositWallet;\n  }\n  return requiredFieldsDefault;\n}\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport function checkIsDev() {\n  return useQuery().get(\"dev\") === \"1\";\n}\nexport function checkIsDevPlayground() {\n  return useQuery().get(\"playground\") === \"1\";\n}\nexport function checkIsDevStaging() {\n  return useQuery().get(\"staging\") === \"1\";\n}\n\nexport function getDataDefault() {\n  const isDev = checkIsDev();\n  const isDevPlayground = checkIsDevPlayground();\n  const isDevStaging = checkIsDevStaging();\n\n  const dataDefault = !isDev\n    ? DataDefaultPlayground\n    : isDevPlayground\n    ? DataDefaultPlayground\n    : isDevStaging\n    ? DataDefaultStaging\n    : DataDefaultDev;\n\n  return dataDefault;\n}\n\nfunction App() {\n  const isDev = checkIsDev();\n  const dataDefault = getDataDefault();\n  const [base_url, setBaseUrl] = React.useState(dataDefault.base_url);\n  const [data, setData] = React.useState({});\n  const [gateway_token, setGateway_token] = React.useState(\n    dataDefault.gateway_token\n  );\n  const [urlGenerated, setUrlGenerated] = React.useState(false);\n  const [url, setURL] = React.useState(\"\");\n  const [urlGatewayParameters, setUrlGatewayParameters] = React.useState({});\n  const typeFormSelected = \"json\";\n\n  function getUrlGateway(DataURL, signature) {\n    const merchant_transaction_id = `merchant_transaction_id=${DataURL.merchant_transaction_id}`;\n    const merchant_id = `merchant_id=${DataURL.merchant_id}`;\n    const account_id = `account_id=${DataURL.account_id}`;\n    const amount = `amount=${DataURL.amount}`;\n    const currency = `currency=${DataURL.currency}`;\n    const operation = `operation=${DataURL.operation}`;\n    const callback_url = `callback_url=${DataURL.callback_url}`;\n    const mock_type = `type=${DataURL.type}`;\n    const mock_auto_approve = `auto_approve=${DataURL.auto_approve}`;\n    const Signature = signature ? `&signature=${signature}` : \"\";\n    const email = DataURL.email ? `&email=${DataURL.email}` : \"\";\n    const document_number = DataURL.document_number\n      ? `&document_number=${DataURL.document_number}`\n      : \"\";\n    const isWithdrawPix =\n      DataURL.operation.toString() === operation_withdraw &&\n      DataURL.type.toString() === typesList.PIX.toString();\n\n    const pix_key = isWithdrawPix ? `&pix_key=${DataURL.pix_key}` : \"\";\n    const pix_key_type = isWithdrawPix\n      ? `&pix_key_type=${DataURL.pix_key_type}`\n      : \"\";\n\n    return `${base_url}?${merchant_transaction_id}&${merchant_id}&${operation}${email}${document_number}&${amount}&${currency}${pix_key_type}${pix_key}&${mock_type}&${account_id}&${callback_url}&${mock_auto_approve}${Signature}`;\n  }\n\n  async function handleGenerateSignature() {\n    const urlWithoutSignature = getUrlGateway(data);\n    const valueToGetArgon2iHash = gateway_token + urlWithoutSignature;\n    const argon2iHash = await getArgon2i(valueToGetArgon2iHash);\n    const signature = utf8_to_b64(argon2iHash);\n\n    setURL(urlWithoutSignature);\n\n    setData((oldData) => {\n      return { ...oldData, signature };\n    });\n\n    setUrlGenerated(true);\n    setUrlGatewayParameters({ ...data, signature });\n  }\n\n  const isWithdrawPix =\n    data?.operation?.toString() === operation_withdraw &&\n    data?.type?.toString() === typesList.PIX.toString();\n\n  const isDepositWallet =\n    data?.operation?.toString() === operation_deposit &&\n    data?.type?.toString() === typesList.WALLET.toString();\n\n  return (\n    <Container>\n      <Form\n        dataDefault={dataDefault}\n        base_url={base_url}\n        setBaseUrl={setBaseUrl}\n        gateway_token={gateway_token}\n        setGateway_token={setGateway_token}\n        data={data}\n        setUrlGenerated={setUrlGenerated}\n        handleGenerateURL={() => handleGenerateSignature()}\n        setData={setData}\n        typeFormSelected={typeFormSelected}\n        isDev={isDev}\n      />\n      <ContainerResult>\n        {urlGenerated && (\n          <>\n            <UrlApi dataDefault={dataDefault} />\n\n            <RequestJson\n              type={typeFormSelected}\n              style={{ marginBottom: 20 }}\n              dataRequest={data}\n              url={url}\n              label=\"JSON Post Request:\"\n              textButton=\"Copy JSON\"\n              baseUrl={dataDefault.base_url}\n            />\n          </>\n        )}\n\n        <CustomButton\n          size=\"large\"\n          onClick={() => handleGenerateSignature()}\n          style={{\n            width: \"100%\",\n            textTransform: \"none\",\n            minWidth: \"100%\",\n            marginRight: 0,\n          }}\n          variant=\"contained\"\n        >\n          {`Generate ${typeFormSelected.toUpperCase()}`}\n        </CustomButton>\n        {urlGenerated && (\n          <UrlParametersList\n            baseUrl={base_url}\n            parameters={urlGatewayParameters}\n            requiredFields={getRequiredFieldsDefault(\n              isWithdrawPix,\n              isDepositWallet\n            )}\n          />\n        )}\n      </ContainerResult>\n    </Container>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/no-duplicates */\nimport React from \"react\";\nimport { Routes, HashRouter, Route } from \"react-router-dom\";\nimport App from \"./pages/App\";\nimport Api from \"./pages/Api\";\n\nconst BrowserRouter = ({ history }) => {\n  return (\n    <HashRouter basename=\"/\" history={history}>\n      <Routes>\n        <Route exact path=\"/\" element={<App />} />\n        <Route path=\"*\" element={<App />} />\n        <Route path=\"/api\" element={<Api />} />\n      </Routes>\n    </HashRouter>\n  );\n};\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport Routes from \"./routes\";\nimport ForceReloadDataProvider from \"./contexts/forceReloadData\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ForceReloadDataProvider>\n      <Routes history={history} />\n    </ForceReloadDataProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}