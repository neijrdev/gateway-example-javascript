{"version":3,"sources":["components/styles.js","components/Form/styles.js","components/Input/styles.js","components/Input/index.js","components/RadioGroup/index.js","utils/pixKeyTypes.js","utils/generatePropsRandom.js","contexts/forceReloadData.js","components/Switch/index.js","app/styles.js","data/types.js","utils/typesUtils.js","components/CheckBox/index.js","components/Form/components/TypesTransaction/styles.js","components/Form/components/TypesTransaction/index.js","components/Form/index.js","services/argon2i.js","utils/base64.js","data/formDataDefault.js","components/RequestJson/styles.js","components/RequestJson/index.js","components/UrlParametersList/styles.js","components/UrlParametersList/index.js","app/index.js","routes.js","index.js"],"names":["ContainerRow","styled","div","ContainerFlexWidth","widthPercent","Container","ContainerHeight","height","FormLabelCustom","h2","ContainerFlexWidthCustom","InputCustom","TextField","Input","label","value","setValue","style","marginBottom","marginTop","id","size","variant","onChange","e","target","StyledFormControlLabel","props","FormControlLabel","theme","checked","color","palette","primary","main","MyFormControlLabel","defaultCheckedValue","useRadioGroup","UseRadioGroup","labelGroup","checkData","setChecked","validDirection","direction","FormLabel","userSelect","component","RadioGroup","defaultValue","name","event","flexDirection","map","data","control","Radio","PixKeyTypes","getRandomHash","uuidv4","replace","substring","getRandomMerchantTransactionId","ForceReloadDataContext","createContext","ForceReloadDataProvider","children","useState","disable","setDisable","Provider","useForceReloadData","context","useContext","Error","InputSwitch","Switch","ContainerResult","CustomButton","Button","operation_withdraw","typesList","PIX","BILLET","WIRETRANFER","WALLET","CheckboxesGroup","isChecked","FormControl","sx","m","mr","FormGroup","Checkbox","ContainerCheckTypes","typesCheckedsDefault","TypesTransaction","setType","operation","setCheckDataSelectedType","showingAndSetPixKeyDefault","typesCheckeds","setTypesCheckeds","setTypesChecked","typeKey","currentTypesCheckeds","newTypesCheckeds","newType","binTypePix","binTypeBillet","binTypeWireTransfer","binTypeWallet","parseInt","toString","getTypeInteger","useEffect","newCheckDataSelectedType","push","enableCheckDataSelectedType","Form","setData","setGateway_token","gateway_token","setUrlGenerated","base_url","setBaseUrl","typeFormSelected","dataDefault","merchant_id","setMerchantId","merchant_transaction_id","setMerchantTransactionId","email","setEmail","document_number","setDocumentNumber","account_id","setAccountId","currency","setCurrency","setOperation","amount","setAmount","callback_url","setcCallback_url","redirect_url","setRedirect_url","type","selected_type","setSelected_type","checkDataSelectedType","pix_key_type","setPix_key_type","pix_key","setPix_key","login_email","setLoginEmail","password","setPassword","logo_url","setLogoUrl","auto_approve","setAuto_approve","checkIsTypeWithdrawValid","Type","handleCleanPixKeyData","isDepositWallet","isWithdraw","oldData","alignItems","margin","onClick","width","textTransform","Typography","string_value","packageJson","version","argon2","require","getArgon2i","pass","a","hash","salt","time","mem","parallelism","hashLen","ArgonType","Argon2i","then","encoded","catch","console","error","message","code","argon2i","utf8_to_b64","str","window","btoa","unescape","encodeURIComponent","DataDefaultDev","DataDefaultPlayground","DataDefaultStaging","PColor","p","RequestJson","dataRequest","url","urlGateway","textButton","baseUrl","isDevLocalhost","devLocalhostPort","rest","getUrlGateway","handleCopyToClipboard","dataRequestJson","JSON","stringify","textToCopy","copyToClipboard","textToNotification","NotificationManager","success","IconButtonMain","OpenInNewIcon","ContentCopyIcon","handleButtonAction","open","paddingTop","disabled","endIcon","marginLeft","maxWidth","background","SectionTitle","ListContainer","ul","ListItem","li","isEmpty","Alert","Legend","AlertContainer","requiredFields","UrlParametersList","parameters","validationArray","Object","entries","forEach","param","includes","length","index","isRequired","renderParametersItem","getIsApiPath","location","pathname","toLowerCase","App","query","URLSearchParams","useLocation","search","isDev","get","isDevPlayground","isDevStaging","IsApiPath","log","React","urlGenerated","setURL","setUrlGateway","setTypeFormSelected","urlGatewayParameters","setUrlGatewayParameters","DataURL","signature","OBJ_DataURL","STRING_Signature","logoUrl","mock_type","mock_auto_approve","Signature","handleGenerateSignature","urlWithoutSignature","valueToGetArgon2iHash","argon2iHash","justifyContent","marginRight","handleGenerateURL","minWidth","toUpperCase","BrowserRouter","history","exact","path","createBrowserHistory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+jEAEaA,EAAeC,IAAOC,IAAV,2MAWZC,EAAqBF,IAAOC,IAAV,qJACpB,gBAAGE,EAAH,EAAGA,aAAH,OAAuBA,EAAY,UAAMA,EAAN,KAAwB,UCXzDC,EAAYJ,IAAOC,IAAV,2TAeTI,EAAkBL,IAAOC,IAAV,gFAEhB,gBAAGK,EAAH,EAAGA,OAAH,OAAiBA,EAAM,UAAMA,EAAN,MAAmB,KACtC,gBAAGA,EAAH,EAAGA,OAAH,OAAiBA,EAAM,UAAMA,EAAN,MAAmB,KAS7CC,GANsBP,IAAOC,IAAV,qFAMDD,IAAOQ,GAAV,kIAMfC,EAA2BT,YAAOE,EAAPF,CAAH,+G,SCjCxBU,EAAcV,YAAOW,IAAPX,CAAH,4C,OCcTY,MAdf,YAA4C,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC7B,OACE,cAACL,EAAD,CACEI,MAAOA,EACPE,MAAO,CAAEC,aAAc,EAAGC,UAAW,GACrCC,GAAG,iBACHN,MAAOA,EACPO,KAAK,QACLC,QAAQ,WACRC,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOV,W,6ECJnCW,EAAyBzB,aAAO,SAAC0B,GAAD,OACpC,cAACC,EAAA,EAAD,eAAsBD,MADO1B,EAE5B,gBAAG4B,EAAH,EAAGA,MAAH,MAAyB,CAC1B,6BADC,EAAUC,SAC8B,CACvCC,MAAOF,EAAMG,QAAQC,QAAQC,UAIjC,SAASC,EAAT,GAAgE,IAAlCC,EAAiC,EAAjCA,oBAAwBT,EAAS,iBAEzDG,GAAU,EAKd,OANmBO,gBAGjBP,EAAUM,IAAwBT,EAAMZ,OAGnC,cAACW,EAAD,aAAwBI,QAASA,GAAaH,IAGxC,SAASW,EAAT,GAMX,IALFC,EAKC,EALDA,WAKC,IAJDC,iBAIC,MAJW,GAIX,EAHDJ,EAGC,EAHDA,oBACAK,EAEC,EAFDA,WAGMC,EADL,EADDC,WAEoC,MAEpC,OACE,qCACE,cAACC,EAAA,EAAD,CACE3B,MAAO,CAAE4B,WAAY,OAAQ1B,WAAY,IACzC2B,UAAU,SAFZ,SAIGP,IAEH,cAACQ,EAAA,EAAD,CACEC,aAAa,QACbC,KAAK,kBACL1B,SAAU,SAAC2B,GAAD,OAAWT,EAAWS,EAAMzB,OAAOV,QAC7CE,MAAO,CAAEkC,cAAeT,GAJ1B,SAMGF,EAAUY,KAAI,SAACC,GAAD,OACb,cAAClB,EAAD,CAEEC,oBAAqBA,EACrBrB,MAAOsC,EAAKtC,MACZD,MAAOuC,EAAKvC,MACZwC,QAAS,cAACC,EAAA,EAAD,KAJJF,EAAKtC,eC9Cf,IAAMyC,EACD,IADCA,EAEJ,IAFIA,EAGJ,I,SCNF,SAASC,EAAcpC,GAE5B,OADoCqC,cAASC,QAAQ,KAAM,IACxBC,UAAU,EAAGvC,GAG3C,SAASwC,IACd,OAAOJ,EAAc,ICNhB,IAAMK,EAAyBC,0BAEvB,SAASC,GAAT,GAAgD,IAAbC,EAAY,EAAZA,SAChD,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACE,cAACN,EAAuBO,SAAxB,CACEtD,MAAO,CACLoD,UACAC,cAHJ,SAMGH,IAKA,SAASK,KACd,IAAMC,EAAUC,qBAAWV,GAC3B,IAAKS,EACH,MAAM,IAAIE,MAAM,4DAElB,MAAO,CAAEN,QADuBI,EAAxBJ,QACUC,WADcG,EAAfH,Y,0BCCJM,GArBK,SAAC/C,GACnB,IAAQsB,EAAmCtB,EAAnCsB,KAAMnB,EAA6BH,EAA7BG,QAAShB,EAAoBa,EAApBb,MAAOS,EAAaI,EAAbJ,SAE9B,OACE,qCACE,cAACqB,EAAA,EAAD,CACE3B,MAAO,CAAE4B,WAAY,OAAQ1B,WAAY,IACzC2B,UAAU,SAFZ,SAIGhC,IAEH,cAAC6D,GAAA,EAAD,CACE7C,QAASA,EACTP,SAAU,SAAC2B,GAAD,OAAW3B,EAAS2B,IAC9BnB,MAAM,UACNkB,KAAMA,Q,UCdD5C,GAAYJ,IAAOC,IAAV,oUAgBT0E,GAAkB3E,IAAOC,IAAV,0SAef2E,GAAe5E,YAAO6E,IAAP7E,CAAH,oFAMZS,GAA2BT,YAAOE,EAAPF,CAAH,2ICxCxB8E,GAAqB,I,QCqBrBC,GAAY,CACvBC,IAAK,EACLC,OAAQ,EACRC,YAAa,EACbC,OAAQ,G,qCCpBK,SAASC,GAAT,GAA4D,IAAjCC,EAAgC,EAAhCA,UAAW7C,EAAqB,EAArBA,WAAY3B,EAAS,EAATA,MAC/D,OACE,cAACyE,GAAA,EAAD,CAAaC,GAAI,CAAEC,EAAG,EAAGC,GAAI,GAAK5C,UAAU,WAAWxB,QAAQ,WAA/D,SACE,cAACqE,GAAA,EAAD,UACE,cAAC/D,EAAA,EAAD,CACEX,MAAO,CAAE4B,WAAY,QACrB/B,MAAOA,GAAS,GAChBwC,QACE,cAACsC,GAAA,EAAD,CACE9D,QAASwD,EACT/D,SAAU,SAAC2B,GAAD,OAAWT,EAAWS,EAAMzB,OAAOK,UAC7CmB,KAAK,gBCfZ,I,GAAM4C,GAAsB5F,IAAOC,IAAV,uFCK1B4F,IAAoB,sBACvBd,GAAUG,aAAc,GADD,gBAEvBH,GAAUE,QAAS,GAFI,gBAGvBF,GAAUC,KAAM,GAHO,gBAIvBD,GAAUI,QAAS,GAJI,IA+GXW,GAxGU,SAAC,GAKnB,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,yBACAC,EACI,EADJA,2BAEA,EAA0CjC,mBAAS,2BAC9C4B,IAD6C,mBAE/Cd,GAAUC,KAAM,KAFnB,mBAAOmB,EAAP,KAAsBC,EAAtB,KAKA,SAASC,EAAgBC,EAASjB,GAChC,IAAIkB,EAAuBJ,EACvBH,IAAclB,KAChByB,EAAoB,eAAQV,KAE9B,IAAMW,EAAgB,2BAAQD,GAAR,mBAA+BD,EAAUjB,IAC/De,EAAiBI,GACjB,IAAMC,EHHH,SAAwBN,GAC7B,IAAMO,EAAaP,EAAcpB,GAAUC,KAAO,IAAM,IAClD2B,EAAgBR,EAAcpB,GAAUE,QAAU,IAAM,IACxD2B,EAAsBT,EAAcpB,GAAUG,aAAe,IAAM,IACnE2B,EAAgBV,EAAcpB,GAAUI,QAAU,IAAM,IAI9D,OADsB2B,SADpBD,EAAgBD,EAAsBD,EAAgBD,EACX,GACxBK,WGLHC,CAAeR,GAC/BT,EAAQU,GAmDV,OAtCAQ,qBAAU,WATJjB,IAAclB,KAChBsB,EAAiB,2BACZP,IADW,mBAEbd,GAAUC,KAAM,KAEnBe,EAAQ,QAMT,CAACC,IAEJiB,qBAAU,YACR,WACE,IAAMC,EAA2B,GAC7Bf,EAAcpB,GAAUC,MAC1BkC,EAAyBC,KAAK,CAC5BrG,MAAOiE,GAAUC,IAAI+B,WACrBlG,MAAO,QAGPsF,EAAcpB,GAAUE,SAC1BiC,EAAyBC,KAAK,CAC5BrG,MAAOiE,GAAUE,OAAO8B,WACxBlG,MAAO,WAGPsF,EAAcpB,GAAUG,cAC1BgC,EAAyBC,KAAK,CAC5BrG,MAAOiE,GAAUG,YAAY6B,WAC7BlG,MAAO,kBAGPsF,EAAcpB,GAAUI,SAC1B+B,EAAyBC,KAAK,CAC5BrG,MAAOiE,GAAUI,OAAO4B,WACxBlG,MAAO,oBAIXoF,EAAyBiB,GAE3BE,GACAlB,MACC,CAACC,IAGF,eAAC,GAAD,WACE,cAAC,GAAD,CACEtF,MAAM,MACNwE,UAAWc,EAAcpB,GAAUC,KACnCxC,WAAY,SAAC6C,GAAD,OAAegB,EAAgBtB,GAAUC,IAAKK,MAE5D,cAAC,GAAD,CACExE,MAAM,kBACNwE,UAAWc,EAAcpB,GAAUI,QACnC3C,WAAY,SAAC6C,GAAD,OAAegB,EAAgBtB,GAAUI,OAAQE,MJ9FpC,MIgG1BW,GACC,qCACE,cAAC,GAAD,CACEnF,MAAM,SACNwE,UAAWc,EAAcpB,GAAUE,QACnCzC,WAAY,SAAC6C,GAAD,OACVgB,EAAgBtB,GAAUE,OAAQI,MAGtC,cAAC,GAAD,CACExE,MAAM,gBACNwE,UAAWc,EAAcpB,GAAUG,aACnC1C,WAAY,SAAC6C,GAAD,OACVgB,EAAgBtB,GAAUG,YAAaG,aCwTtCgC,OA3Yf,YASI,IARFC,EAQC,EARDA,QACAC,EAOC,EAPDA,iBACAC,EAMC,EANDA,cACAC,EAKC,EALDA,gBACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,iBACAC,EACC,EADDA,YAIA,EAAqC5D,mBAAS4D,EAAYC,aAA1D,mBAAOA,EAAP,KAAoBC,EAApB,KACA,EAA4D9D,mBAC1DL,KADF,mBAAOoE,EAAP,KAAgCC,EAAhC,KAGA,EAA0BhE,mBAAS4D,EAAYK,OAA/C,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAA6ClE,mBAC3C4D,EAAYO,iBADd,mBAAOA,EAAP,KAAwBC,EAAxB,KAGA,EAAmCpE,mBAAS,aAA5C,mBAAOqE,EAAP,KAAmBC,EAAnB,KACA,EAAgCtE,mBAAS,OAAzC,mBAAOuE,EAAP,KAAiBC,EAAjB,KACA,EAAkCxE,mBLhDH,KKgD/B,mBAAO+B,EAAP,KAAkB0C,GAAlB,KACA,GAA4BzE,mBAAS,OAArC,qBAAO0E,GAAP,MAAeC,GAAf,MACA,GAAyC3E,mBACvC,gDADF,qBAAO4E,GAAP,MAAqBC,GAArB,MAGA,GAAwC7E,mBACtC,mCADF,qBAAO8E,GAAP,MAAqBC,GAArB,MAGA,GAAwB/E,mBAAS,KAAjC,qBAAOgF,GAAP,MAAalD,GAAb,MACA,GAA0C9B,mBAAS,KAAnD,qBAAOiF,GAAP,MAAsBC,GAAtB,MACA,GAA0DlF,mBAAS,IAAnE,qBAAOmF,GAAP,MAA8BnD,GAA9B,MACA,GAAwChC,mBAAS,IAAjD,qBAAOoF,GAAP,MAAqBC,GAArB,MACA,GAA8BrF,mBAAS,IAAvC,qBAAOsF,GAAP,MAAgBC,GAAhB,MACA,GAAqCvF,mBAAS4D,EAAYK,OAA1D,qBAAOuB,GAAP,MAAoBC,GAApB,MACA,GAAgCzF,mBAAS,aAAzC,qBAAO0F,GAAP,MAAiBC,GAAjB,MACA,GAA+B3F,mBA1B7B,yGA0BF,qBAAO4F,GAAP,MAAiBC,GAAjB,MACA,GAAwC7F,oBAAS,GAAjD,qBAAO8F,GAAP,MAAqBC,GAArB,MACA,GAAgC3F,KAAxBH,GAAR,GAAQA,QAASC,GAAjB,GAAiBA,WAEjB,SAAS8F,GAAyBC,GAChC,OAAQA,GACN,IAAK,IAGL,IAAK,IACH,OAAO,EAET,QACE,OAAO,GAKb,SAASC,KACPb,GAAgB,IAChBE,GAAW,IASb,IAAMY,GACiB,SAArBxC,GL7F6B,MK8F7B5B,GACkB,MAAlBkD,GA6FF,OA3FAjC,qBAAU,WAERQ,GAAgB,GAChBtD,IAAW,GAEX,IAAMkG,EAAarE,IAAclB,GAMjCwC,GAAQ,SAACgD,GACP,OAAO,2BACFA,GADL,IAEEhC,aACAK,UACAoB,cAA+B,IAAjBA,GAAwB,IAAM,IAC5ClB,gBACAL,WACAJ,kBACAF,QACAJ,cACA9B,YACAgC,0BACAe,gBACAG,cAAwB,MAATD,GAAe,GAAKC,GACnCD,KAlBKA,GAmBLQ,YAAaW,GAAkBX,GAAc,GAC7CE,SAAUS,GAAkBT,GAAW,GACvCN,aAAcgB,EAAahB,GAAe,GAC1CE,QAASc,EAAad,GAAU,GAChCM,mBAGH,CACDvC,EACAQ,EACAE,EACAE,EACAE,EACAE,EACAyB,GACAvB,EACAxC,EACA2C,GACAE,GACAE,GACAtB,EACAD,EACAE,EACAuB,GACAC,GACAG,GACAE,GACAM,KAsCA,eAACzJ,EAAD,WACE,eAACL,EAAD,CACEiB,MAAO,CAAEC,aAAc,GAAIX,OAAQ,GAAIiK,WAAY,UADrD,UAGE,cAAC9J,EAAD,CAA0BN,aAAc,GAAxC,SACE,cAACI,EAAD,CAAiBS,MAAO,CAAEwJ,OAAQ,GAAlC,8BAIF,cAAC/J,EAAD,CAA0BN,aAAc,GAAIa,MAAO,GAAnD,SACE,cAAC6D,EAAA,EAAD,CACE4F,QAAS,kBA7CjBxC,EAAyBrE,UACzBO,IAAW,IA6CHnD,MAAO,CACL0J,MAAO,OACPC,cAAe,QAEjBtJ,SAAqB,IAAZ6C,GAAmB,YAAc,WAC1CpC,MAAM,UAPR,qCAaJ,eAAC/B,EAAD,WACE,eAACU,EAAD,CAA0BN,aAAc,GAAxC,UACE,cAAC,EAAD,CACEW,MAAOgH,EACP/G,SAAU,SAACD,GAAD,OAAWiH,EAAcjH,IACnCD,MAAM,iBAER,cAACR,EAAD,CAAiBC,OAAQ,QAE3B,cAACG,EAAD,CAA0BN,aAAc,GAAxC,SACE,cAAC,EAAD,CACEW,MAAOkH,EACPjH,SAAU,SAACD,GAAD,OAAWmH,EAAyBnH,IAC9CD,MAAM,kCAIZ,cAACR,EAAD,CAAiBC,OAAQ,IACzB,cAAC,EAAD,CACEQ,MAAO0G,EACPzG,SAAU,SAACD,GAAD,OAAWyG,EAAiBzG,IACtCD,MAAM,mBAER,cAACN,EAAD,yBACA,cAAC,EAAD,CACEO,MAAOoH,EACPnH,SAAU,SAACD,GAAD,OAAWqH,EAASrH,IAC9BD,MAAM,2BAER,cAACR,EAAD,CAAiBC,OAAQ,KACzB,eAACP,EAAD,WACE,cAACU,EAAD,CAA0BN,aAAc,GAAxC,SACE,cAAC,EAAD,CACEW,MAAOsH,EACPrH,SAAU,SAACD,GAAD,OAAWuH,EAAkBvH,IACvCD,MAAM,2CAIV,cAACJ,EAAD,CAA0BN,aAAc,GAAxC,SACE,cAAC,EAAD,CACEW,MAAOwH,EACPvH,SAAU,SAACD,GAAD,OAAWyH,EAAazH,IAClCD,MAAM,sCAIZ,cAACN,EAAD,gCACA,eAACR,EAAD,WACE,cAACU,EAAD,CAA0BN,aAAc,GAAxC,SACE,cAAC,EAAD,CACEW,MAAO6H,GACP5H,SAAU,SAACD,GAAD,OAAW8H,GAAU9H,IAC/BD,MAAM,cAGV,cAACR,EAAD,CAAiBC,OAAQ,KACzB,eAACG,EAAD,CAA0BN,aAAc,GAAxC,UACE,cAAC,GAAD,CACEU,MAAM,eACNgB,QAASkI,GACTzI,SAAU,SAAC2B,GAAD,OAAW+G,GAAgB/G,EAAMzB,OAAOK,aAjHlC,IAAjBkI,GACL,cAACa,EAAA,EAAD,CAAY/H,UAAU,OAAOf,MAAM,UAAnC,kBAIA,cAAC8I,EAAA,EAAD,CAAY/H,UAAU,OAAOf,MAAM,QAAnC,sBAgHE,cAACrB,EAAD,CAA0BN,aAAc,GAAxC,SACE,cAAC,EAAD,CACEgC,oBAAqBqG,EACrBhG,WAAY,SAAC1B,GAAD,OAAW2H,EAAY3H,IACnCwB,WAAW,WACXC,UAAW,CACT,CAAEzB,MAAO,MAAOD,MAAO,OACvB,CAAEC,MAAO,MAAOD,MAAO,eAK/B,cAACR,EAAD,CAAiBC,OAAQ,KACzB,cAAC,EAAD,CACE6B,oBAAqB6D,EACrBxD,WAAY,SAAC1B,GAAD,OAAW4H,GAAa5H,IACpCwB,WAAW,YACXC,UAAW,CACT,CAAEzB,MAAO,IAAKD,MAAO,WACrB,CAAEC,MAAO,IAAKD,MAAO,eAGzB,cAACR,EAAD,CAAiBC,OAAQ,KACzB,cAACqC,EAAA,EAAD,CAAWE,UAAU,SAArB,qCAEA,cAAC,GAAD,CACEkD,QAASA,GACTC,UAAWA,EACXC,yBAA0BA,GAC1BC,2BAA4B,WA3N3B+D,GAAyBhB,KAC5BkB,QA6NsB,SAArBvC,GACC,qCACE,cAACvH,EAAD,CAAiBC,OAAQ,KACzB,cAAC,EAAD,CACE6B,oBAAqB+G,GACrB1G,WAAY,SAAC1B,GAAD,OAAWqI,GAAiBrI,IACxCwB,WAAW,qBACXC,UAAW6G,QAIhBgB,IACC,qCACE,cAAC/J,EAAD,CAAiBC,OAAQ,KACzB,eAACP,EAAD,WACE,eAACU,EAAD,CAA0BN,aAAc,GAAxC,UACE,cAAC,EAAD,CACEW,MAAO2I,GACP1I,SAAU,SAACD,GAAD,OAAW4I,GAAc5I,IACnCD,MAAM,yBAER,cAACR,EAAD,CAAiBC,OAAQ,QAE3B,cAACG,EAAD,CAA0BN,aAAc,GAAxC,SACE,cAAC,EAAD,CACEW,MAAO6I,GACP5I,SAAU,SAACD,GAAD,OAAW8I,GAAY9I,IACjCD,MAAM,oCAMfmF,IAAclB,IACK,MAAlBoE,IACAe,GAAyBhB,KACvB,qCACE,eAAClJ,EAAD,WACE,eAACU,EAAD,CAA0BN,aAAc,GAAxC,UACE,cAACE,EAAD,CAAiBC,OAAQ,KACzB,cAAC,EAAD,CACE6B,oBAAqBkH,GACrB7G,WAAY,SAAC1B,GAAD,OApLH+J,EAoL8B/J,KAnLhCyC,IACnB+F,GAAgB/F,GAChBiG,GAAWpB,IAGTyC,IAAiBtH,IACnB+F,GAAgB/F,GAChBiG,GAAWtB,SAGT2C,IAAiBtH,IACnB+F,GAAgB/F,GAChBiG,GAAW,MAbf,IAAyBqB,GAqLTvI,WAAW,yBACXC,UAAW,CACT,CAAEzB,MAAOyC,EAAsB1C,MAAO,YACtC,CAAEC,MAAOyC,EAAmB1C,MAAO,SACnC,CAAEC,MAAOyC,EAAmB1C,MAAO,eAIzC,eAACJ,EAAD,CAA0BN,aAAc,GAAxC,UACE,cAACE,EAAD,CAAiBC,OAAQ,KACzB,cAAC,EAAD,CACEQ,MAAOyI,GACPxI,SAAU,SAACD,GAAD,OAAW0I,GAAW1I,IAChCD,MAAM,uBAIZ,cAACd,EAAD,UACE,sBAAMiB,MAAO,CAAEE,UAAW,OAAQD,aAAc,QAAhD,sHAKF,cAAClB,EAAD,UACE,cAAC6E,GAAD,CACE6F,QAAS,kBAAMN,MACfnJ,MAAO,CACL0J,MAAO,MACPC,cAAe,QAEjBtJ,QAAQ,YANV,iCAaR,cAAChB,EAAD,CAAiBC,OAAQ,KACzB,cAAC,EAAD,CACEQ,MAAO+H,GACP9H,SAAU,SAACD,GAAD,OAAWgI,GAAiBhI,IACtCD,MAAM,kBAER,cAACR,EAAD,CAAiBC,OAAQ,KACzB,cAAC,EAAD,CACEQ,MAAOiI,GACPhI,SAAU,SAACD,GAAD,OAAWkI,GAAgBlI,IACrCD,MAAM,6BAER,cAACR,EAAD,CAAiBC,OAAQ,KACzB,cAACC,EAAD,2BACA,cAAC,EAAD,CACEO,MAAO4G,EACP3G,SAAU,SAACD,GAAD,OAAW6G,EAAW7G,IAChCD,MAAM,cAER,cAACR,EAAD,CAAiBC,OAAQ,KACzB,cAAC,EAAD,CACEQ,MAAO+I,GACP9I,SAAU,SAACD,GAAD,OAAWgJ,GAAWhJ,IAChCD,MAAM,yBAER,eAAC8B,EAAA,EAAD,CAAWE,UAAU,SAAS7B,MAAO,CAAEwJ,OAAQ,YAA/C,cACIM,GAAYC,eC7ZhBC,GAASC,EAAQ,KAEhB,SAAeC,GAAtB,mC,8CAAO,WAA0BC,GAA1B,eAAAC,EAAA,sEACiBJ,GACnBK,KAAK,CACJF,OACAG,KAAM9H,EAAc,IACpB+H,KAAM,EACNC,IAAK,GACLC,YAAa,EACbC,QAAS,GACTzC,KAAM+B,GAAOW,UAAUC,UAExBC,MAAK,SAACR,GAAD,OAAUA,EAAKS,WACpBC,OAAM,SAACxK,GAAD,OAAOyK,QAAQC,MAAM1K,EAAE2K,QAAS3K,EAAE4K,SAZtC,cACCC,EADD,yBAaEA,GAbF,4C,sBCJA,SAASC,GAAYC,GAC1B,OAAOC,OAAOC,KAAKC,SAASC,mBAAmBJ,KCD1C,I,eAAMK,GAAiB,CAC5BjF,SAAU,mCACVF,cAAe,mCACfM,YAAa,MACbE,wBAAyB,GACzBE,MAAO,iCACPE,gBAAiB,eAGNwE,GAAwB,CACnClF,SAAU,0CACVF,cAAe,mCACfM,YAAa,OACbE,wBAAyB,GACzBE,MAAO,iCACPE,gBAAiB,eAGNyE,GAAqB,CAChCnF,SAAU,uCACVF,cAAe,mCACfM,YAAa,KACbE,wBAAyB,GACzBE,MAAO,iCACPE,gBAAiB,e,qGCpBNhI,I,OAAYJ,IAAOC,IAAV,uXAkBT6M,GAAS9M,IAAO+M,EAAV,uNAER,qBAAGjL,OAAqB,UAStBvB,GAAkBP,IAAOQ,GAAV,oIAMfC,GAA2BT,YAAOE,EAAPF,CAAH,qIAQxB4E,GAAe5E,YAAO6E,IAAP7E,CAAH,oF,gHCmFVgN,I,qBAAAA,GA3Gf,YAWI,IAVFC,EAUC,EAVDA,YACAC,EASC,EATDA,IACAC,EAQC,EARDA,WACAtM,EAOC,EAPDA,MACAuM,EAMC,EANDA,WACAnE,EAKC,EALDA,KACAoE,EAIC,EAJDA,QACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,iBACGC,EACF,kBACD,EAAgCnJ,KAAxBH,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAQjB,SAASsJ,IACP,OAAIH,EACKH,EAAWzJ,QAAQ2J,EALtB,oBAAN,OADkC,OAArBE,EAA4BA,EADrB,SASbJ,EAGT,SAASO,IACP,IAAKxJ,EAAS,CACZ,IAAMyJ,EAAkBC,KAAKC,UAAL,2BAAoBZ,GAApB,IAAiCC,SACnDY,EAAsB,QAAT7E,EAAiBwE,IAAkBE,EACtDI,KAAgBD,GAChB,IAAME,EAA8B,QAAT/E,EAAiB,aAAe,cAC3DgF,uBAAoBC,QAAQF,EAAoB,GAAI,KACpD7J,GAAW,IAIf,IAAMgK,EAA0B,QAATlF,EAAiBmF,KAAgBC,KASxD,SAASC,IACM,QAATrF,EAPC/E,IACHqI,OAAOgC,KAAKd,KACZtJ,GAAW,IAQXuJ,IAIJ,OACE,eAAC,GAAD,2BAAeF,GAAf,cACE,eAACzN,EAAD,CACEiB,MAAO,CAAEuJ,WAAY,SAAUiE,WAAY,GAAIvN,aAAc,IAD/D,UAGE,cAAC,GAAD,CAA0Bd,aAAc,GAAxC,SACE,cAAC,GAAD,UAAkBU,MAEpB,cAAC,GAAD,CAA0BV,aAAc,GAAxC,SACE,cAAC,GAAD,CACEsO,SAAUvK,EACVwK,QAAS,cAACP,EAAD,IACT1D,QAAS,kBAAM6D,KACftN,MAAO,CAAE0J,MAAO,OAAQC,cAAe,QACvCtJ,QAAQ,YALV,SAOG+L,MAGK,QAATnE,GACC,cAAC,GAAD,CACE9I,aAAc,GACda,MAAO,CAAE2N,WAAY,GAAIC,SAAU,KAFrC,SAIE,cAAC,GAAD,CACEH,SAAUvK,EACVwK,QAAS,cAAC,KAAD,IACTjE,QAAS,kBAAMiD,KACf1M,MAAO,CACL0J,MAAO,OACPC,cAAe,OACfkE,WAAY,QAEdxN,QAAQ,WATV,2BAiBN,cAAC,yBAAD,IAEC4L,GACC,cAAC,KAAD,CAAY9L,GAAG,cAAciC,KAAI,2BAAO6J,GAAP,IAAoBC,UAGtDC,GAAc,cAACL,GAAD,CAAQhL,MAAM,UAAd,SAAyB2L,WC3HjCrN,GAAYJ,IAAOC,IAAV,6WAkBT6O,GAAe9O,IAAOQ,GAAV,mIAMZuO,GAAgB/O,IAAOgP,GAAV,6IAQbC,GAAWjP,IAAOkP,GAAV,qTAEV,SAACxN,GAAD,OAAWA,EAAMyN,SAAW,aAW1BC,GAAQpP,IAAOQ,GAAV,sIAML6O,GAASrP,IAAO+M,EAAV,mHAKNuC,GAAiBtP,IAAOC,IAAV,6WC7CrBsP,GAAiB,CACrB,cACA,YACA,0BACA,SACA,WACA,YACA,aACA,oBACA,gBAuDaC,GApDW,SAAC9N,GACzB,IAAQ+N,EAAwB/N,EAAxB+N,WAAYpC,EAAY3L,EAAZ2L,QACdqC,EAAkB,GAiCxB,OA/BAC,OAAOC,QAAQH,GAAYI,SAAQ,SAACC,GAAD,OACjCJ,EAAgBvI,KACdoI,GAAeQ,SAASD,EAAM,KAA2B,IAApBA,EAAM,GAAGE,WA8BhD,eAAC,GAAD,WACE,eAAC9P,EAAD,WACE,cAAC4O,GAAD,6BACA,eAACC,GAAD,WACE,cAACE,GAAD,UAAW5B,IACX,uBACCsC,OAAOC,QAAQH,GAAYtM,KAAI,SAAC2M,EAAOG,GAAR,OAhCxC,SAA8BH,EAAOG,GACnC,IAAMC,EAAaX,GAAeQ,SAASD,EAAM,IAC3CX,EAA8B,IAApBW,EAAM,GAAGE,OACzB,OACE,eAACf,GAAD,CAAsBE,QAASA,EAA/B,UACGe,GAAc,IADjB,UAEMJ,EAAM,GAFZ,cAEoBA,EAAM,MAFXG,GA6BTE,CAAqBL,EAAOG,YApBlC,eAACX,GAAD,WACGI,EAAgBK,UAAS,IACxB,cAACX,GAAD,mDAEF,cAACxE,EAAA,EAAD,CAAYvJ,QAAQ,IAAIwB,UAAU,IAAlC,qBAGA,cAACwM,GAAD,yCCvBR,SAASe,KAIP,OAPO7D,OAAO8D,SAASC,SAMWvJ,WAAWwJ,cAAcR,SAD3C,kCA8OHS,OAzOf,WACE,IAAMC,EAfC,IAAIC,gBAAgBC,cAAcC,QAgBnCC,EAA6B,MAArBJ,EAAMK,IAAI,OAClBC,EAA8C,MAA5BN,EAAMK,IAAI,cAC5BxD,EAA4C,MAA3BmD,EAAMK,IAAI,aAC3BE,EAAwC,MAAzBP,EAAMK,IAAI,WACzBvD,EAAmBkD,EAAMK,IAAI,kBAC7BG,EAAYb,KAElBpE,QAAQkF,IAAR,qBAA0BD,IAE1B,IAAMpJ,EAAegJ,EAEjBE,EACAnE,GACAoE,EACAnE,GACAF,GALAC,GAOJ,EAA+BuE,IAAMlN,SAAS4D,EAAYH,UAA1D,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAAwBwJ,IAAMlN,SAAS,IAAvC,mBAAOb,EAAP,KAAakE,EAAb,KACA,EAA0C6J,IAAMlN,SAC9C4D,EAAYL,eADd,mBAAOA,EAAP,KAAsBD,EAAtB,KAGA,EAAwC4J,IAAMlN,UAAS,GAAvD,mBAAOmN,EAAP,KAAqB3J,EAArB,KACA,EAAsB0J,IAAMlN,SAAS,IAArC,mBAAOiJ,EAAP,KAAYmE,EAAZ,KACA,EAAoCF,IAAMlN,SAAS,IAAnD,mBAAOkJ,EAAP,KAAmBmE,EAAnB,KACA,EAAgDH,IAAMlN,SAAS,OAA/D,mBAAO2D,EAAP,KAAyB2J,EAAzB,KACA,EAAwDJ,IAAMlN,SAAS,IAAvE,mBAAOuN,EAAP,KAA6BC,EAA7B,KA8CA,SAAShE,EAAciE,EAASC,GA5ChC,IAAoCC,EAAaC,IA6CXF,GA7CFC,EA6CPF,GA5CTnI,SAAaqI,EAAYvI,aACzCoI,EAAwB,CACtBzJ,wBAAyB4J,EAAY5J,wBACrCF,YAAa8J,EAAY9J,YACzBQ,WAAYsJ,EAAYtJ,WACxBK,OAAQiJ,EAAYjJ,OACpBH,SAAUoJ,EAAYpJ,SACtBxC,UAAW4L,EAAY5L,UACvB6C,aAAc+I,EAAY/I,aAC1BE,aAAc6I,EAAY7I,aAC1BE,KAAM2I,EAAY3I,KAClBc,aAAc6H,EAAY7H,aAC1B4H,UAAWE,GAAoB,GAC/BC,QAASF,EAAY/H,SAAW+H,EAAY/H,SAAW,GACvD3B,MAAO0J,EAAY1J,MAAQ0J,EAAY1J,MAAQ,GAC/CE,gBAAiBwJ,EAAYxJ,gBACzBwJ,EAAYxJ,gBACZ,GACJmB,QAASqI,EAAYrI,QACrBF,aAAcuI,EAAYvI,eAG5BoI,EAAwB,CACtBzJ,wBAAyB4J,EAAY5J,wBACrCF,YAAa8J,EAAY9J,YACzBQ,WAAYsJ,EAAYtJ,WACxBK,OAAQiJ,EAAYjJ,OACpBH,SAAUoJ,EAAYpJ,SACtBxC,UAAW4L,EAAY5L,UACvB6C,aAAc+I,EAAY/I,aAC1BE,aAAc6I,EAAY7I,aAC1BE,KAAM2I,EAAY3I,KAClBc,aAAc6H,EAAY7H,aAC1B4H,UAAWE,GAAoB,GAC/BC,QAASF,EAAY/H,SAAW+H,EAAY/H,SAAW,GACvD3B,MAAO0J,EAAY1J,MAAQ0J,EAAY1J,MAAQ,GAC/CE,gBAAiBwJ,EAAYxJ,gBACzBwJ,EAAYxJ,gBACZ,KAQR,IAAMJ,EAAuB,kCAA8B0J,EAAQ1J,yBAC7DF,EAAW,sBAAkB4J,EAAQ5J,aACrCQ,EAAU,qBAAiBoJ,EAAQpJ,YACnCK,EAAM,iBAAa+I,EAAQ/I,QAC3BH,EAAQ,mBAAekJ,EAAQlJ,UAC/BxC,EAAS,oBAAgB0L,EAAQ1L,WACjC6C,EAAY,uBAAmB6I,EAAQ7I,cACvCE,EAAY,uBAAmB2I,EAAQ3I,cACvCgJ,EAAS,eAAWL,EAAQzI,MAC5B+I,EAAiB,uBAAmBN,EAAQ3H,cAC5CkI,EAAYN,EAAS,qBAAiBA,GAAc,GACpDG,EAAUJ,EAAQ7H,SAAR,oBAAgC6H,EAAQ7H,UAAa,GAC/D3B,EAAQwJ,EAAQxJ,MAAR,iBAA0BwJ,EAAQxJ,OAAU,GACpDE,EAAkBsJ,EAAQtJ,gBAAR,2BACAsJ,EAAQtJ,iBAC5B,GACEmB,EAAUmI,EAAQnI,QAAR,mBAA8BmI,EAAQnI,SAAY,KAC5DF,EAAeqI,EAAQrI,aAAR,wBACAqI,EAAQrI,cACzB,KAaJ,OATEqI,EAAQ1L,YAAclB,IACpB4M,EAAQnI,SACRmI,EAAQrI,aAEA,UAAM3B,EAAN,YAAkBM,EAAlB,YAA6CF,EAA7C,YAA4D9B,GAA5D,OAAwEkC,GAAxE,OAAgFE,EAAhF,YAAmGO,EAAnG,YAA6GH,GAA7G,OAAwHa,GAAxH,OAAuIE,EAAvI,YAAkJwI,EAAlJ,YAA+JzJ,EAA/J,YAA6KO,EAA7K,YAA6LE,EAA7L,YAA6MiJ,GAA7M,OAAiOC,GAAjO,OAA6OH,GAE7O,UAAMpK,EAAN,YAAkBM,EAAlB,YAA6CF,EAA7C,YAA4D9B,GAA5D,OAAwEkC,GAAxE,OAAgFE,EAAhF,YAAmGO,EAAnG,YAA6GH,EAA7G,YAAyHuJ,EAAzH,YAAsIzJ,EAAtI,YAAoJO,EAApJ,YAAoKE,EAApK,YAAoLiJ,GAApL,OAAwMC,GAAxM,OAAoNH,GA1GrN,SAgHEI,IAhHF,2EAgHb,kCAAA9G,EAAA,6DACQ+G,EAAsB1E,EAAcrK,GACpCgP,EAAwB5K,EAAgB2K,EAFhD,SAG4BjH,GAAWkH,GAHvC,OAGQC,EAHR,OAIQV,EAAYtF,GAAYgG,GAE9BhB,EAAOc,GAEPb,EAAc7D,EAAcrK,EAAMuO,IAElCrK,GAAQ,SAACgD,GACP,OAAO,2BAAKA,GAAZ,IAAqBqH,iBAEvBlK,GAAgB,GAblB,6CAhHa,sBAgIb,OACE,qCACGoJ,GACC,eAAC9Q,EAAD,CAAciB,MAAO,CAAEsR,eAAgB,UAAvC,UACE,cAAC,GAAD,CACEnS,aAAc,GACda,MAAO,CAAEuR,YAAa,GAAItR,aAAc,IAF1C,SAIE,cAAC2D,GAAD,CACE6F,QAAS,kBAAM8G,EAAoB,QACnCvQ,MAAO,CACL0J,MAAO,OACPC,cAAe,OACfkE,WAAiC,QAArBjH,EAA6B,UAAY,WAEvDvG,QAAQ,YAPV,oCAaF,cAAC,GAAD,CAA0BlB,aAAc,GAAxC,SACE,cAACyE,GAAD,CACE6F,QAAS,kBAAM8G,EAAoB,SACnCvQ,MAAO,CACL0J,MAAO,OACPC,cAAe,OACfkE,WAAiC,SAArBjH,EAA8B,UAAY,WAExDvG,QAAQ,YAPV,8CAcN,eAAC,GAAD,WACE,cAAC,GAAD,CACEwG,YAAaA,EACbH,SAAUA,EACVC,WAAYA,EACZH,cAAeA,EACfD,iBAAkBA,EAClBnE,KAAMA,EACNqE,gBAAiBA,EACjB+K,kBAAmB,kBAAMN,KACzB5K,QAASA,EACTM,iBAAkBA,IAEpB,eAACjD,GAAD,WACGyM,GACC,qCACwB,QAArBxJ,GACC,cAAC,GAAD,CACEqB,KAAMrB,EACN5G,MAAO,CAAEC,aAAc,IACvBkM,WAAYA,EACZtM,MAAM,sBACNuM,WAAW,mBACXC,QAASxF,EAAYH,SACrB4F,eAAgBA,EAChBC,iBAAkBA,IAIA,SAArB3F,GACC,cAAC,GAAD,CACEqB,KAAMrB,EACN5G,MAAO,CAAEC,aAAc,IACvBgM,YAAa7J,EACb8J,IAAKA,EACLrM,MAAM,qBACNuM,WAAW,YACXC,QAASxF,EAAYH,SACrB4F,eAAgBA,EAChBC,iBAAkBA,OAK1B,cAAC3I,GAAD,CACExD,KAAK,QACLqJ,QAAS,kBAAMyH,KACflR,MAAO,CACL0J,MAAO,OACPC,cAAe,OACf8H,SAAU,OACVF,YAAa,GAEflR,QAAQ,YATV,4BAWeuG,EAAiB8K,iBAE/BtB,GACC,cAAC,GAAD,CACE/D,QAAS3F,EACT+H,WAAY+B,cCvPXmB,GAXO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACE,cAAC,IAAD,CAAQA,QAASA,EAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIjQ,UAAW2N,KACjC,cAAC,IAAD,CAAOsC,KAAK,IAAIjQ,UAAW2N,WCJ7BoC,GAAUG,cAEhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnP,GAAD,UACE,cAAC,GAAD,CAAQ6O,QAASA,SAGrBO,SAASC,eAAe,W","file":"static/js/main.38a9087e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ContainerRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: auto;\n  @media (max-width: 930px) {\n    flex-direction: column;\n  }\n`;\n\nexport const ContainerFlexWidth = styled.div`\n  width: ${({ widthPercent }) => (widthPercent ? `${widthPercent}%` : \"100%\")};\n  flex-direction: row;\n  height: auto;\n  @media (max-width: 930px) {\n    flex-direction: column;\n  }\n`;\n","import styled from \"styled-components\";\nimport { ContainerFlexWidth } from \"../styles\";\n\nexport const Container = styled.div`\n  width: 45%;\n  height: auto;\n  justify-content: center;\n  align-items: center;\n  padding: 0px 20px 20px 20px;\n  background-color: #ffffff;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  @media (max-width: 930px) {\n    width: 100%;\n    padding: 10px;\n  }\n`;\n\nexport const ContainerHeight = styled.div`\n  width: 100%;\n  height: ${({ height }) => (height ? `${height}px` : 0)};\n  min-height: ${({ height }) => (height ? `${height}px` : 0)};\n`;\n\nexport const ContainerCheckTypes = styled.div`\n  width: 100%;\n  flex-direction: row;\n  height: auto;\n`;\n\nexport const FormLabelCustom = styled.h2`\n  font-size: 18px;\n  color: grey;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\n  @media (max-width: 930px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`;\n","import styled from \"styled-components\";\nimport TextField from \"@mui/material/TextField\";\n\nexport const InputCustom = styled(TextField)`\n  width: 100%;\n`;\n","import React from \"react\";\nimport { InputCustom } from \"./styles\";\n\nfunction Input({ label, value, setValue }) {\n  return (\n    <InputCustom\n      value={value}\n      style={{ marginBottom: 5, marginTop: 5 }}\n      id=\"outlined-basic\"\n      label={label}\n      size=\"small\"\n      variant=\"outlined\"\n      onChange={(e) => setValue(e.target.value)}\n    />\n  );\n}\n\nexport default Input;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport RadioGroup, { useRadioGroup } from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Radio from \"@mui/material/Radio\";\n// import { Container } from './styles';\n\nconst StyledFormControlLabel = styled((props) => (\n  <FormControlLabel {...props} />\n))(({ theme, checked }) => ({\n  \".MuiFormControlLabel-label\": checked && {\n    color: theme.palette.primary.main,\n  },\n}));\n\nfunction MyFormControlLabel({ defaultCheckedValue, ...props }) {\n  const radioGroup = useRadioGroup();\n  let checked = false;\n  if (radioGroup) {\n    checked = defaultCheckedValue === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n}\n\nexport default function UseRadioGroup({\n  labelGroup,\n  checkData = [],\n  defaultCheckedValue,\n  setChecked,\n  direction,\n}) {\n  const validDirection = direction || \"row\";\n\n  return (\n    <>\n      <FormLabel\n        style={{ userSelect: \"none\", marginTop: -13 }}\n        component=\"legend\"\n      >\n        {labelGroup}\n      </FormLabel>\n      <RadioGroup\n        defaultValue=\"first\"\n        name=\"use-radio-group\"\n        onChange={(event) => setChecked(event.target.value)}\n        style={{ flexDirection: validDirection }}\n      >\n        {checkData.map((data) => (\n          <MyFormControlLabel\n            key={data.value}\n            defaultCheckedValue={defaultCheckedValue}\n            value={data.value}\n            label={data.label}\n            control={<Radio />}\n          />\n        ))}\n      </RadioGroup>\n    </>\n  );\n}\n","// pix_key_type\n// 0 - document (cpf/cnpf)\n// 2 - phone\n// 3 - email\n\nexport const PixKeyTypes = {\n  document: \"0\",\n  phone: \"2\",\n  email: \"3\",\n};\n","import { v4 as uuidv4 } from \"uuid\";\n\nexport function getRandomHash(size) {\n  const randomMerchantTransactionId = uuidv4().replace(/-/g, \"\");\n  return randomMerchantTransactionId.substring(0, size);\n}\n\nexport function getRandomMerchantTransactionId() {\n  return getRandomHash(10);\n}\n\nexport function getRandomUserAccountId() {\n  return getRandomHash(6);\n}\n","import React, { createContext, useState, useContext } from \"react\";\r\n\r\nexport const ForceReloadDataContext = createContext();\r\n\r\nexport default function ForceReloadDataProvider({ children }) {\r\n  const [disable, setDisable] = useState(false);\r\n\r\n  return (\r\n    <ForceReloadDataContext.Provider\r\n      value={{\r\n        disable,\r\n        setDisable,\r\n      }}\r\n    >\r\n      {children}\r\n    </ForceReloadDataContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useForceReloadData() {\r\n  const context = useContext(ForceReloadDataContext);\r\n  if (!context)\r\n    throw new Error(\"useDisable must be used within a ForceReloadDataProvider\");\r\n  const { disable, setDisable } = context;\r\n  return { disable, setDisable };\r\n}\r\n","import { FormLabel, Switch } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst InputSwitch = (props) => {\r\n  const { name, checked, label, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      <FormLabel\r\n        style={{ userSelect: \"none\", marginTop: -13 }}\r\n        component=\"legend\"\r\n      >\r\n        {label}\r\n      </FormLabel>\r\n      <Switch\r\n        checked={checked}\r\n        onChange={(event) => onChange(event)}\r\n        color=\"primary\"\r\n        name={name}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputSwitch;\r\n","import styled from \"styled-components\";\nimport Button from \"@mui/material/Button\";\nimport { ContainerFlexWidth } from \"../components/styles\";\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 10px;\n  background: #fff;\n  justify-content: center;\n  align-items: flex-start;\n  flex-direction: row;\n  @media (max-width: 930px) {\n    flex-direction: column;\n    padding: 20px;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const ContainerResult = styled.div`\n  width: 40%;\n  margin-left: 20px;\n  height: auto;\n  justify-content: center;\n  align-items: center;\n  padding: 0px 20px 20px 20px;\n  background-color: #ffffff;\n  border-radius: 5px;\n  @media (max-width: 930px) {\n    width: 100%;\n    margin-left: 0px;\n  }\n`;\n\nexport const CustomButton = styled(Button)`\n  @media (max-width: 930px) {\n    width: 100%;\n  }\n`;\n\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\n  @media (max-width: 930px) {\n    width: 100%;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n","export const operation_deposit = \"0\";\r\nexport const operation_withdraw = \"5\";\r\n","// 0000 - 0 - Nenhum\n// 0001 - 1 - Pix\n// 0010 - 2 - Boleto\n// 0011 - 3 - Boleto, Pix\n// 0100 - 4 - TED\n// 0101 - 5 - TED, Pix\n// 0110 - 6 - TED, Boleto\n// 0111 - 7 - TED, Boleto, PIX\n// 1000 - 8 - Wallet\n// 1001 - 9 - Wallet, Pix\n// 1010 - 10 - Wallet, Boleto\n// 1011 - 11 - Wallet, Boleto, Pix\n// 1100 - 12 - Wallet, Ted\n// 1101 - 13 - Wallet, Ted, Pix\n// 1110 - 14 - Wallet, Ted, Boleto\n// 1111 - 15 - Wallet, Ted, Boleto, Pix (Todas)\n\n// 1 - PIX\n// 2 - Boleto\n// 4 - TED\n// 8 - Wallet\n\nexport const typesList = {\n  PIX: 1,\n  BILLET: 2,\n  WIRETRANFER: 4,\n  WALLET: 8,\n};\n\nexport function getTypeInteger(typesCheckeds) {\n  const binTypePix = typesCheckeds[typesList.PIX] ? \"1\" : \"0\";\n  const binTypeBillet = typesCheckeds[typesList.BILLET] ? \"1\" : \"0\";\n  const binTypeWireTransfer = typesCheckeds[typesList.WIRETRANFER] ? \"1\" : \"0\";\n  const binTypeWallet = typesCheckeds[typesList.WALLET] ? \"1\" : \"0\";\n  const typeInBinary =\n    binTypeWallet + binTypeWireTransfer + binTypeBillet + binTypePix;\n  const typeInInteger = parseInt(typeInBinary, 2);\n  return typeInInteger.toString();\n}\n","import * as React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nexport default function CheckboxesGroup({ isChecked, setChecked, label }) {\n  return (\n    <FormControl sx={{ m: 0, mr: 3 }} component=\"fieldset\" variant=\"standard\">\n      <FormGroup>\n        <FormControlLabel\n          style={{ userSelect: \"none\" }}\n          label={label || \"\"}\n          control={\n            <Checkbox\n              checked={isChecked}\n              onChange={(event) => setChecked(event.target.checked)}\n              name=\"gilad\"\n            />\n          }\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n","import styled from \"styled-components\";\r\n\r\nexport const ContainerCheckTypes = styled.div`\r\n  width: 100%;\r\n  flex-direction: row;\r\n  height: auto;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { typesList, getTypeInteger } from \"../../../../utils/typesUtils\";\r\nimport { operation_deposit, operation_withdraw } from \"../../../../data/types\";\r\nimport Checkbox from \"../../../CheckBox\";\r\n\r\nimport { ContainerCheckTypes } from \"./styles\";\r\n\r\nconst typesCheckedsDefault = {\r\n  [typesList.WIRETRANFER]: false,\r\n  [typesList.BILLET]: false,\r\n  [typesList.PIX]: false,\r\n  [typesList.WALLET]: false,\r\n};\r\n\r\nconst TypesTransaction = ({\r\n  setType,\r\n  operation,\r\n  setCheckDataSelectedType,\r\n  showingAndSetPixKeyDefault,\r\n}) => {\r\n  const [typesCheckeds, setTypesCheckeds] = useState({\r\n    ...typesCheckedsDefault,\r\n    [typesList.PIX]: true,\r\n  });\r\n\r\n  function setTypesChecked(typeKey, isChecked) {\r\n    let currentTypesCheckeds = typesCheckeds;\r\n    if (operation === operation_withdraw) {\r\n      currentTypesCheckeds = { ...typesCheckedsDefault };\r\n    }\r\n    const newTypesCheckeds = { ...currentTypesCheckeds, [typeKey]: isChecked };\r\n    setTypesCheckeds(newTypesCheckeds);\r\n    const newType = getTypeInteger(newTypesCheckeds);\r\n    setType(newType);\r\n  }\r\n\r\n  function setTypesCheckedDefault() {\r\n    if (operation === operation_withdraw) {\r\n      setTypesCheckeds({\r\n        ...typesCheckedsDefault,\r\n        [typesList.PIX]: true,\r\n      });\r\n      setType(\"1\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTypesCheckedDefault(operation, setTypesCheckeds);\r\n  }, [operation]);\r\n\r\n  useEffect(() => {\r\n    function enableCheckDataSelectedType() {\r\n      const newCheckDataSelectedType = [];\r\n      if (typesCheckeds[typesList.PIX]) {\r\n        newCheckDataSelectedType.push({\r\n          value: typesList.PIX.toString(),\r\n          label: \"Pix\",\r\n        });\r\n      }\r\n      if (typesCheckeds[typesList.BILLET]) {\r\n        newCheckDataSelectedType.push({\r\n          value: typesList.BILLET.toString(),\r\n          label: \"Billet\",\r\n        });\r\n      }\r\n      if (typesCheckeds[typesList.WIRETRANFER]) {\r\n        newCheckDataSelectedType.push({\r\n          value: typesList.WIRETRANFER.toString(),\r\n          label: \"Wire Transfer\",\r\n        });\r\n      }\r\n      if (typesCheckeds[typesList.WALLET]) {\r\n        newCheckDataSelectedType.push({\r\n          value: typesList.WALLET.toString(),\r\n          label: \"Paylivre Wallet\",\r\n        });\r\n      }\r\n\r\n      setCheckDataSelectedType(newCheckDataSelectedType);\r\n    }\r\n    enableCheckDataSelectedType();\r\n    showingAndSetPixKeyDefault();\r\n  }, [typesCheckeds]);\r\n\r\n  return (\r\n    <ContainerCheckTypes>\r\n      <Checkbox\r\n        label=\"PIX\"\r\n        isChecked={typesCheckeds[typesList.PIX]}\r\n        setChecked={(isChecked) => setTypesChecked(typesList.PIX, isChecked)}\r\n      />\r\n      <Checkbox\r\n        label=\"Paylivre Wallet\"\r\n        isChecked={typesCheckeds[typesList.WALLET]}\r\n        setChecked={(isChecked) => setTypesChecked(typesList.WALLET, isChecked)}\r\n      />\r\n      {operation === operation_deposit && (\r\n        <>\r\n          <Checkbox\r\n            label=\"Billet\"\r\n            isChecked={typesCheckeds[typesList.BILLET]}\r\n            setChecked={(isChecked) =>\r\n              setTypesChecked(typesList.BILLET, isChecked)\r\n            }\r\n          />\r\n          <Checkbox\r\n            label=\"Wire Transfer\"\r\n            isChecked={typesCheckeds[typesList.WIRETRANFER]}\r\n            setChecked={(isChecked) =>\r\n              setTypesChecked(typesList.WIRETRANFER, isChecked)\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n    </ContainerCheckTypes>\r\n  );\r\n};\r\n\r\nexport default TypesTransaction;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport { Typography } from \"@mui/material\";\r\nimport {\r\n  Container,\r\n  FormLabelCustom,\r\n  ContainerHeight,\r\n  ContainerFlexWidthCustom,\r\n} from \"./styles\";\r\n\r\nimport { ContainerRow } from \"../styles\";\r\n\r\nimport Input from \"../Input\";\r\nimport RadioGroup from \"../RadioGroup\";\r\nimport { PixKeyTypes } from \"../../utils/pixKeyTypes\";\r\n\r\nimport { getRandomMerchantTransactionId } from \"../../utils/generatePropsRandom\";\r\n\r\nimport { useForceReloadData } from \"../../contexts/forceReloadData\";\r\nimport InputSwitch from \"../Switch\";\r\nimport packageJson from \"../../../package.json\";\r\nimport { CustomButton } from \"../../app/styles\";\r\nimport { operation_deposit, operation_withdraw } from \"../../data/types\";\r\nimport TypesTransaction from \"./components/TypesTransaction\";\r\n\r\nfunction Form({\r\n  setData,\r\n  setGateway_token,\r\n  gateway_token,\r\n  setUrlGenerated,\r\n  base_url,\r\n  setBaseUrl,\r\n  typeFormSelected,\r\n  dataDefault,\r\n}) {\r\n  const logo_url_example =\r\n    \"https://github.com/paylivre/gateway-example-react-js/blob/master/assets/logo_jackpot_new.png?raw=true\";\r\n  const [merchant_id, setMerchantId] = useState(dataDefault.merchant_id);\r\n  const [merchant_transaction_id, setMerchantTransactionId] = useState(\r\n    getRandomMerchantTransactionId()\r\n  );\r\n  const [email, setEmail] = useState(dataDefault.email);\r\n  const [document_number, setDocumentNumber] = useState(\r\n    dataDefault.document_number\r\n  );\r\n  const [account_id, setAccountId] = useState(\"123654asd\");\r\n  const [currency, setCurrency] = useState(\"BRL\");\r\n  const [operation, setOperation] = useState(operation_deposit);\r\n  const [amount, setAmount] = useState(\"500\");\r\n  const [callback_url, setcCallback_url] = useState(\r\n    \"https://api.dev.paylivre.com/dev/v2/callback\"\r\n  );\r\n  const [redirect_url, setRedirect_url] = useState(\r\n    \"https://www.merchant_to_you.com\"\r\n  );\r\n  const [type, setType] = useState(\"1\");\r\n  const [selected_type, setSelected_type] = useState(\"1\");\r\n  const [checkDataSelectedType, setCheckDataSelectedType] = useState([]);\r\n  const [pix_key_type, setPix_key_type] = useState(\"\");\r\n  const [pix_key, setPix_key] = useState(\"\");\r\n  const [login_email, setLoginEmail] = useState(dataDefault.email);\r\n  const [password, setPassword] = useState(\"123123123\");\r\n  const [logo_url, setLogoUrl] = useState(logo_url_example);\r\n  const [auto_approve, setAuto_approve] = useState(true);\r\n  const { disable, setDisable } = useForceReloadData();\r\n\r\n  function checkIsTypeWithdrawValid(Type) {\r\n    switch (Type) {\r\n      case \"1\": {\r\n        return true;\r\n      }\r\n      case \"9\": {\r\n        return true;\r\n      }\r\n      default: {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleCleanPixKeyData() {\r\n    setPix_key_type(\"\");\r\n    setPix_key(\"\");\r\n  }\r\n\r\n  function showingAndSetPixKeyDefault() {\r\n    if (!checkIsTypeWithdrawValid(type)) {\r\n      handleCleanPixKeyData();\r\n    }\r\n  }\r\n\r\n  const isDepositWallet =\r\n    typeFormSelected === \"json\" &&\r\n    operation === operation_deposit &&\r\n    selected_type === \"5\";\r\n\r\n  useEffect(() => {\r\n    // Toda vez que alterar algum dado no data\r\n    setUrlGenerated(false);\r\n    setDisable(false);\r\n\r\n    const isWithdraw = operation === operation_withdraw;\r\n\r\n    function getType() {\r\n      return type;\r\n    }\r\n\r\n    setData((oldData) => {\r\n      return {\r\n        ...oldData,\r\n        account_id,\r\n        amount,\r\n        auto_approve: auto_approve === true ? \"1\" : \"0\",\r\n        callback_url,\r\n        currency,\r\n        document_number,\r\n        email,\r\n        merchant_id,\r\n        operation,\r\n        merchant_transaction_id,\r\n        redirect_url,\r\n        selected_type: type === \"0\" ? \"\" : selected_type,\r\n        type: getType(),\r\n        login_email: isDepositWallet ? login_email : \"\",\r\n        password: isDepositWallet ? password : \"\",\r\n        pix_key_type: isWithdraw ? pix_key_type : \"\",\r\n        pix_key: isWithdraw ? pix_key : \"\",\r\n        logo_url,\r\n      };\r\n    });\r\n  }, [\r\n    setData,\r\n    merchant_id,\r\n    merchant_transaction_id,\r\n    email,\r\n    document_number,\r\n    account_id,\r\n    auto_approve,\r\n    currency,\r\n    operation,\r\n    amount,\r\n    callback_url,\r\n    redirect_url,\r\n    setUrlGenerated,\r\n    gateway_token,\r\n    base_url,\r\n    type,\r\n    selected_type,\r\n    pix_key_type,\r\n    pix_key,\r\n    logo_url,\r\n  ]);\r\n\r\n  function handleReloadRandomFormatData() {\r\n    setMerchantTransactionId(getRandomMerchantTransactionId());\r\n    setDisable(false);\r\n  }\r\n\r\n  function isAutoApproveSelected() {\r\n    return auto_approve === true ? (\r\n      <Typography component=\"span\" color=\"primary\">\r\n        true\r\n      </Typography>\r\n    ) : (\r\n      <Typography component=\"span\" color=\"error\">\r\n        false\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  function handleSetPixKey(string_value) {\r\n    if (string_value === PixKeyTypes.document) {\r\n      setPix_key_type(PixKeyTypes.document);\r\n      setPix_key(document_number);\r\n    }\r\n\r\n    if (string_value === PixKeyTypes.email) {\r\n      setPix_key_type(PixKeyTypes.email);\r\n      setPix_key(email);\r\n    }\r\n\r\n    if (string_value === PixKeyTypes.phone) {\r\n      setPix_key_type(PixKeyTypes.phone);\r\n      setPix_key(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerRow\r\n        style={{ marginBottom: 20, height: 50, alignItems: \"center\" }}\r\n      >\r\n        <ContainerFlexWidthCustom widthPercent={48}>\r\n          <FormLabelCustom style={{ margin: 0 }}>\r\n            Merchant Data:\r\n          </FormLabelCustom>\r\n        </ContainerFlexWidthCustom>\r\n        <ContainerFlexWidthCustom widthPercent={50} style={{}}>\r\n          <Button\r\n            onClick={() => handleReloadRandomFormatData()}\r\n            style={{\r\n              width: \"100%\",\r\n              textTransform: \"none\",\r\n            }}\r\n            variant={disable === true ? \"contained\" : \"outlined\"}\r\n            color=\"success\"\r\n          >\r\n            Reload Random Data\r\n          </Button>\r\n        </ContainerFlexWidthCustom>\r\n      </ContainerRow>\r\n      <ContainerRow>\r\n        <ContainerFlexWidthCustom widthPercent={48}>\r\n          <Input\r\n            value={merchant_id}\r\n            setValue={(value) => setMerchantId(value)}\r\n            label=\"Merchant ID:\"\r\n          />\r\n          <ContainerHeight height={15} />\r\n        </ContainerFlexWidthCustom>\r\n        <ContainerFlexWidthCustom widthPercent={45}>\r\n          <Input\r\n            value={merchant_transaction_id}\r\n            setValue={(value) => setMerchantTransactionId(value)}\r\n            label=\"Merchant Transaction ID:\"\r\n          />\r\n        </ContainerFlexWidthCustom>\r\n      </ContainerRow>\r\n      <ContainerHeight height={5} />\r\n      <Input\r\n        value={gateway_token}\r\n        setValue={(value) => setGateway_token(value)}\r\n        label=\"Gateway Token:\"\r\n      />\r\n      <FormLabelCustom>User Data:</FormLabelCustom>\r\n      <Input\r\n        value={email}\r\n        setValue={(value) => setEmail(value)}\r\n        label=\"User Email: (OPTIONAL)\"\r\n      />\r\n      <ContainerHeight height={20} />\r\n      <ContainerRow>\r\n        <ContainerFlexWidthCustom widthPercent={48}>\r\n          <Input\r\n            value={document_number}\r\n            setValue={(value) => setDocumentNumber(value)}\r\n            label=\"User Document - CPF/CNPJ: (OPTIONAL)\"\r\n          />\r\n        </ContainerFlexWidthCustom>\r\n\r\n        <ContainerFlexWidthCustom widthPercent={48}>\r\n          <Input\r\n            value={account_id}\r\n            setValue={(value) => setAccountId(value)}\r\n            label=\"User Account ID in Merchant:\"\r\n          />\r\n        </ContainerFlexWidthCustom>\r\n      </ContainerRow>\r\n      <FormLabelCustom>Transaction Data:</FormLabelCustom>\r\n      <ContainerRow>\r\n        <ContainerFlexWidthCustom widthPercent={50}>\r\n          <Input\r\n            value={amount}\r\n            setValue={(value) => setAmount(value)}\r\n            label=\"Amount:\"\r\n          />\r\n        </ContainerFlexWidthCustom>\r\n        <ContainerHeight height={15} />\r\n        <ContainerFlexWidthCustom widthPercent={60}>\r\n          <InputSwitch\r\n            label=\"Auto approve\"\r\n            checked={auto_approve}\r\n            onChange={(event) => setAuto_approve(event.target.checked)}\r\n          />\r\n          {isAutoApproveSelected()}\r\n        </ContainerFlexWidthCustom>\r\n        <ContainerFlexWidthCustom widthPercent={60}>\r\n          <RadioGroup\r\n            defaultCheckedValue={currency}\r\n            setChecked={(value) => setCurrency(value)}\r\n            labelGroup=\"Currency\"\r\n            checkData={[\r\n              { value: \"BRL\", label: \"BRL\" },\r\n              { value: \"USD\", label: \"USD\" },\r\n            ]}\r\n          />\r\n        </ContainerFlexWidthCustom>\r\n      </ContainerRow>\r\n      <ContainerHeight height={15} />\r\n      <RadioGroup\r\n        defaultCheckedValue={operation}\r\n        setChecked={(value) => setOperation(value)}\r\n        labelGroup=\"Operation\"\r\n        checkData={[\r\n          { value: \"0\", label: \"Deposit\" },\r\n          { value: \"5\", label: \"Withdraw\" },\r\n        ]}\r\n      />\r\n      <ContainerHeight height={15} />\r\n      <FormLabel component=\"legend\">Type passed by merchant</FormLabel>\r\n\r\n      <TypesTransaction\r\n        setType={setType}\r\n        operation={operation}\r\n        setCheckDataSelectedType={setCheckDataSelectedType}\r\n        showingAndSetPixKeyDefault={() => showingAndSetPixKeyDefault()}\r\n      />\r\n\r\n      {typeFormSelected === \"json\" && (\r\n        <>\r\n          <ContainerHeight height={15} />\r\n          <RadioGroup\r\n            defaultCheckedValue={selected_type}\r\n            setChecked={(value) => setSelected_type(value)}\r\n            labelGroup=\"User selected type\"\r\n            checkData={checkDataSelectedType}\r\n          />\r\n        </>\r\n      )}\r\n      {isDepositWallet && (\r\n        <>\r\n          <ContainerHeight height={15} />\r\n          <ContainerRow>\r\n            <ContainerFlexWidthCustom widthPercent={48}>\r\n              <Input\r\n                value={login_email}\r\n                setValue={(value) => setLoginEmail(value)}\r\n                label=\"Email Login Paylivre\"\r\n              />\r\n              <ContainerHeight height={15} />\r\n            </ContainerFlexWidthCustom>\r\n            <ContainerFlexWidthCustom widthPercent={45}>\r\n              <Input\r\n                value={password}\r\n                setValue={(value) => setPassword(value)}\r\n                label=\"Password Login Paylivre\"\r\n              />\r\n            </ContainerFlexWidthCustom>\r\n          </ContainerRow>\r\n        </>\r\n      )}\r\n      {operation === operation_withdraw &&\r\n        selected_type === \"4\" &&\r\n        checkIsTypeWithdrawValid(type) && (\r\n          <>\r\n            <ContainerRow>\r\n              <ContainerFlexWidthCustom widthPercent={48}>\r\n                <ContainerHeight height={25} />\r\n                <RadioGroup\r\n                  defaultCheckedValue={pix_key_type}\r\n                  setChecked={(value) => handleSetPixKey(value)}\r\n                  labelGroup=\"Pix Key Type(OPTIONAL)\"\r\n                  checkData={[\r\n                    { value: PixKeyTypes.document, label: \"CPF/CNPJ\" },\r\n                    { value: PixKeyTypes.phone, label: \"Phone\" },\r\n                    { value: PixKeyTypes.email, label: \"Email\" },\r\n                  ]}\r\n                />\r\n              </ContainerFlexWidthCustom>\r\n              <ContainerFlexWidthCustom widthPercent={48}>\r\n                <ContainerHeight height={30} />\r\n                <Input\r\n                  value={pix_key}\r\n                  setValue={(value) => setPix_key(value)}\r\n                  label=\"User Pix Key\"\r\n                />\r\n              </ContainerFlexWidthCustom>\r\n            </ContainerRow>\r\n            <ContainerRow>\r\n              <span style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n                Note: The Pix Key Type is optional, but if selected it is\r\n                necessary to fill in the User Pix Key Value.\r\n              </span>\r\n            </ContainerRow>\r\n            <ContainerRow>\r\n              <CustomButton\r\n                onClick={() => handleCleanPixKeyData()}\r\n                style={{\r\n                  width: \"30%\",\r\n                  textTransform: \"none\",\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                Clear Data Pix\r\n              </CustomButton>\r\n            </ContainerRow>\r\n          </>\r\n        )}\r\n      <ContainerHeight height={15} />\r\n      <Input\r\n        value={callback_url}\r\n        setValue={(value) => setcCallback_url(value)}\r\n        label=\"Callback URL:\"\r\n      />\r\n      <ContainerHeight height={20} />\r\n      <Input\r\n        value={redirect_url}\r\n        setValue={(value) => setRedirect_url(value)}\r\n        label=\"Redirect URL: (OPTIONAL)\"\r\n      />\r\n      <ContainerHeight height={15} />\r\n      <FormLabelCustom>Environment:</FormLabelCustom>\r\n      <Input\r\n        value={base_url}\r\n        setValue={(value) => setBaseUrl(value)}\r\n        label=\"Base URL:\"\r\n      />\r\n      <ContainerHeight height={15} />\r\n      <Input\r\n        value={logo_url}\r\n        setValue={(value) => setLogoUrl(value)}\r\n        label=\"Logo URL: (OPTIONAL)\"\r\n      />\r\n      <FormLabel component=\"legend\" style={{ margin: \"0.6rem 0\" }}>\r\n        v{packageJson.version}\r\n      </FormLabel>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { getRandomHash } from \"../utils/generatePropsRandom\";\n\nconst argon2 = require(\"argon2-browser\");\n\nexport async function getArgon2i(pass) {\n  const argon2i = await argon2\n    .hash({\n      pass,\n      salt: getRandomHash(14),\n      time: 2,\n      mem: 16,\n      parallelism: 1,\n      hashLen: 16,\n      type: argon2.ArgonType.Argon2i,\n    })\n    .then((hash) => hash.encoded)\n    .catch((e) => console.error(e.message, e.code));\n  return argon2i;\n}\n","export function utf8_to_b64(str) {\n  return window.btoa(unescape(encodeURIComponent(str)));\n}\n","export const DataDefaultDev = {\r\n  base_url: \"https://dev.gateway.paylivre.com\",\r\n  gateway_token: \"NHsuzedl6omTPvoxc0p7gVXc7Xthhf6Y\",\r\n  merchant_id: \"302\",\r\n  merchant_transaction_id: \"\",\r\n  email: \"user_gateway_test@tutanota.com\",\r\n  document_number: \"61317581075\",\r\n};\r\n\r\nexport const DataDefaultPlayground = {\r\n  base_url: \"https://playground.gateway.paylivre.com\",\r\n  gateway_token: \"0c85yWaiBWx1Mclvink7suWrHoEQnH8Q\",\r\n  merchant_id: \"1508\",\r\n  merchant_transaction_id: \"\",\r\n  email: \"user_gateway_test@tutanota.com\",\r\n  document_number: \"61317581075\",\r\n};\r\n\r\nexport const DataDefaultStaging = {\r\n  base_url: \"https://staging.gateway.paylivre.com\",\r\n  gateway_token: \"jUjoq0N8WRB95mHjmRqr0xh6lFJZy9Kn\",\r\n  merchant_id: \"25\",\r\n  merchant_transaction_id: \"\",\r\n  email: \"user_gateway_test@tutanota.com\",\r\n  document_number: \"61317581075\",\r\n};\r\n","import styled from \"styled-components\";\nimport Button from \"@mui/material/Button\";\nimport { ContainerFlexWidth } from \"../styles\";\n\nexport const Container = styled.div`\n  display: flex;\n  background: #292929;\n  flex-wrap: nowrap;\n  width: auto;\n  height: auto;\n  min-height: 100px;\n  justify-content: center;\n  padding: 0 20px 20px 20px;\n  border-radius: 5px;\n  flex-direction: column;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  @media (max-width: 930px) {\n    width: 88%;\n    padding: 20px;\n  }\n`;\n\nexport const PColor = styled.p`\n  font-size: small;\n  color: ${({ color }) => color || \"#fff\"};\n  margin: 0;\n  max-width: 100%;\n  display: flex;\n  font-size: 14px;\n  word-break: break-all;\n  font-family: \"Courier New\", Courier, monospace;\n`;\n\nexport const FormLabelCustom = styled.h2`\n  font-size: 18px;\n  color: white;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\n  @media (max-width: 930px) {\n    width: 100%;\n    flex-direction: column;\n    margin: 5px 0;\n  }\n`;\n\nexport const CustomButton = styled(Button)`\n  @media (max-width: 930px) {\n    width: 100%;\n  }\n`;\n","import React from \"react\";\r\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\r\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport copyToClipboard from \"copy-to-clipboard\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\n\r\nimport JSONPretty from \"react-json-pretty\";\r\nimport \"./jsonStyle.css\";\r\nimport {\r\n  Container,\r\n  PColor,\r\n  FormLabelCustom,\r\n  ContainerFlexWidthCustom,\r\n  CustomButton,\r\n} from \"./styles\";\r\nimport { ContainerRow } from \"../styles\";\r\n\r\nimport { useForceReloadData } from \"../../contexts/forceReloadData\";\r\n\r\nfunction RequestJson({\r\n  dataRequest,\r\n  url,\r\n  urlGateway,\r\n  label,\r\n  textButton,\r\n  type,\r\n  baseUrl,\r\n  isDevLocalhost,\r\n  devLocalhostPort,\r\n  ...rest\r\n}) {\r\n  const { disable, setDisable } = useForceReloadData();\r\n\r\n  function getLocahostBaseUrl() {\r\n    const portDefault = \"3000\";\r\n    const port = devLocalhostPort !== null ? devLocalhostPort : portDefault;\r\n    return `http://localhost:${port}`;\r\n  }\r\n\r\n  function getUrlGateway() {\r\n    if (isDevLocalhost) {\r\n      return urlGateway.replace(baseUrl, getLocahostBaseUrl());\r\n    }\r\n    return urlGateway;\r\n  }\r\n\r\n  function handleCopyToClipboard() {\r\n    if (!disable) {\r\n      const dataRequestJson = JSON.stringify({ ...dataRequest, url });\r\n      const textToCopy = type === \"url\" ? getUrlGateway() : dataRequestJson;\r\n      copyToClipboard(textToCopy);\r\n      const textToNotification = type === \"url\" ? \"Copied URL\" : \"JSON Copied\";\r\n      NotificationManager.success(textToNotification, \"\", 1000);\r\n      setDisable(true);\r\n    }\r\n  }\r\n\r\n  const IconButtonMain = type === \"url\" ? OpenInNewIcon : ContentCopyIcon;\r\n\r\n  function handleOpenUrlNewWindow() {\r\n    if (!disable) {\r\n      window.open(getUrlGateway());\r\n      setDisable(true);\r\n    }\r\n  }\r\n\r\n  function handleButtonAction() {\r\n    if (type === \"url\") {\r\n      handleOpenUrlNewWindow();\r\n    } else {\r\n      handleCopyToClipboard();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container {...rest}>\r\n      <ContainerRow\r\n        style={{ alignItems: \"center\", paddingTop: 10, marginBottom: 10 }}\r\n      >\r\n        <ContainerFlexWidthCustom widthPercent={50}>\r\n          <FormLabelCustom>{label}</FormLabelCustom>\r\n        </ContainerFlexWidthCustom>\r\n        <ContainerFlexWidthCustom widthPercent={50}>\r\n          <CustomButton\r\n            disabled={disable}\r\n            endIcon={<IconButtonMain />}\r\n            onClick={() => handleButtonAction()}\r\n            style={{ width: \"100%\", textTransform: \"none\" }}\r\n            variant=\"contained\"\r\n          >\r\n            {textButton}\r\n          </CustomButton>\r\n        </ContainerFlexWidthCustom>\r\n        {type === \"url\" && (\r\n          <ContainerFlexWidthCustom\r\n            widthPercent={50}\r\n            style={{ marginLeft: 20, maxWidth: 140 }}\r\n          >\r\n            <CustomButton\r\n              disabled={disable}\r\n              endIcon={<ContentCopyIcon />}\r\n              onClick={() => handleCopyToClipboard()}\r\n              style={{\r\n                width: \"100%\",\r\n                textTransform: \"none\",\r\n                background: \"#fff\",\r\n              }}\r\n              variant=\"outlined\"\r\n            >\r\n              Copy URL\r\n            </CustomButton>\r\n          </ContainerFlexWidthCustom>\r\n        )}\r\n      </ContainerRow>\r\n\r\n      <NotificationContainer />\r\n\r\n      {dataRequest && (\r\n        <JSONPretty id=\"json-pretty\" data={{ ...dataRequest, url }} />\r\n      )}\r\n\r\n      {urlGateway && <PColor color=\"#ffff80\">{getUrlGateway()}</PColor>}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RequestJson;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: start;\r\n  background: transparent;\r\n  flex-wrap: wrap;\r\n  width: auto;\r\n  height: auto;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  flex-direction: column;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  @media (max-width: 930px) {\r\n    width: 88%;\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  font-size: 18px;\r\n  color: grey;\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n`;\r\n\r\nexport const ListContainer = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: start;\r\n  padding: 0;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  font-size: small;\r\n  color: ${(props) => props.isEmpty && \"#be453a\"};\r\n  margin: 0;\r\n  max-width: 100%;\r\n  display: flex;\r\n  font-size: 1.2rem;\r\n  word-break: break-all;\r\n  margin: 0.2rem 0;\r\n  /* font-family: \"Courier New\", Courier, monospace; */\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n`;\r\n\r\nexport const Alert = styled.h2`\r\n  font-size: 18px;\r\n  color: #be453a;\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n`;\r\n\r\nexport const Legend = styled.p`\r\n  font-size: 1rem;\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n`;\r\n\r\nexport const AlertContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: start;\r\n  background: transparent;\r\n  flex-wrap: wrap;\r\n  width: auto;\r\n  height: auto;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  flex-direction: column;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  @media (max-width: 930px) {\r\n    width: 88%;\r\n    padding: 20px;\r\n  }\r\n`;\r\n","import { Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { ContainerFlexWidth } from \"../styles\";\r\nimport {\r\n  Alert,\r\n  AlertContainer,\r\n  Container,\r\n  Legend,\r\n  ListContainer,\r\n  ListItem,\r\n  SectionTitle,\r\n} from \"./styles\";\r\n\r\nconst requiredFields = [\r\n  \"merchant_id\",\r\n  \"operation\",\r\n  \"merchant_transaction_id\",\r\n  \"amount\",\r\n  \"currency\",\r\n  \"mock_type\",\r\n  \"account_id\",\r\n  \"mock_auto_approve\",\r\n  \"callback_url\",\r\n];\r\n\r\nconst UrlParametersList = (props) => {\r\n  const { parameters, baseUrl } = props;\r\n  const validationArray = [];\r\n\r\n  Object.entries(parameters).forEach((param) =>\r\n    validationArray.push(\r\n      requiredFields.includes(param[0]) && param[1].length === 0\r\n    )\r\n  );\r\n\r\n  function renderParametersItem(param, index) {\r\n    const isRequired = requiredFields.includes(param[0]);\r\n    const isEmpty = param[1].length === 0;\r\n    return (\r\n      <ListItem key={index} isEmpty={isEmpty}>\r\n        {isRequired && \"*\"}\r\n        {`${param[0]} = ${param[1]}`}\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  function renderAlert() {\r\n    return (\r\n      <AlertContainer>\r\n        {validationArray.includes(true) && (\r\n          <Alert>All mandatory fields must be filled!</Alert>\r\n        )}\r\n        <Typography variant=\"p\" component=\"p\">\r\n          Legend:\r\n        </Typography>\r\n        <Legend>* - Mandatory field</Legend>\r\n      </AlertContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerFlexWidth>\r\n        <SectionTitle>Url Parameters</SectionTitle>\r\n        <ListContainer>\r\n          <ListItem>{baseUrl}</ListItem>\r\n          <br />\r\n          {Object.entries(parameters).map((param, index) =>\r\n            renderParametersItem(param, index)\r\n          )}\r\n        </ListContainer>\r\n      </ContainerFlexWidth>\r\n      {renderAlert()}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UrlParametersList;\r\n","/* eslint-disable no-unused-expressions */\r\nimport React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Form from \"../components/Form\";\r\nimport { getArgon2i } from \"../services/argon2i\";\r\nimport { utf8_to_b64 } from \"../utils/base64\";\r\nimport {\r\n  DataDefaultDev,\r\n  DataDefaultPlayground,\r\n  DataDefaultStaging,\r\n} from \"../data/formDataDefault\";\r\nimport {\r\n  Container,\r\n  ContainerResult,\r\n  CustomButton,\r\n  ContainerFlexWidthCustom,\r\n} from \"./styles\";\r\n\r\nimport { ContainerRow } from \"../components/styles\";\r\n\r\nimport RequestJson from \"../components/RequestJson\";\r\nimport UrlParametersList from \"../components/UrlParametersList\";\r\nimport { operation_withdraw } from \"../data/types\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction getPathname() {\r\n  return window.location.pathname;\r\n}\r\n\r\nfunction getIsApiPath() {\r\n  const currentPathName = getPathname();\r\n  const apiPath = \"gateway-example-javascript/api\";\r\n  const isApiPath = currentPathName.toString().toLowerCase().includes(apiPath);\r\n  return isApiPath;\r\n}\r\n\r\nfunction App() {\r\n  const query = useQuery();\r\n  const isDev = query.get(\"dev\") === \"1\";\r\n  const isDevPlayground = query.get(\"playground\") === \"1\";\r\n  const isDevLocalhost = query.get(\"localhost\") === \"1\";\r\n  const isDevStaging = query.get(\"staging\") === \"1\";\r\n  const devLocalhostPort = query.get(\"localhost_port\");\r\n  const IsApiPath = getIsApiPath();\r\n\r\n  console.log(`IsApiPath: ${IsApiPath}`);\r\n\r\n  const dataDefault = !isDev\r\n    ? DataDefaultPlayground\r\n    : isDevPlayground\r\n    ? DataDefaultPlayground\r\n    : isDevStaging\r\n    ? DataDefaultStaging\r\n    : DataDefaultDev;\r\n\r\n  const [base_url, setBaseUrl] = React.useState(dataDefault.base_url);\r\n  const [data, setData] = React.useState({});\r\n  const [gateway_token, setGateway_token] = React.useState(\r\n    dataDefault.gateway_token\r\n  );\r\n  const [urlGenerated, setUrlGenerated] = React.useState(false);\r\n  const [url, setURL] = React.useState(\"\");\r\n  const [urlGateway, setUrlGateway] = React.useState(\"\");\r\n  const [typeFormSelected, setTypeFormSelected] = React.useState(\"url\");\r\n  const [urlGatewayParameters, setUrlGatewayParameters] = React.useState({});\r\n\r\n  function handleUrlGatewayParameters(OBJ_DataURL, STRING_Signature) {\r\n    if (!!OBJ_DataURL.pix_key && !!OBJ_DataURL.pix_key_type) {\r\n      setUrlGatewayParameters({\r\n        merchant_transaction_id: OBJ_DataURL.merchant_transaction_id,\r\n        merchant_id: OBJ_DataURL.merchant_id,\r\n        account_id: OBJ_DataURL.account_id,\r\n        amount: OBJ_DataURL.amount,\r\n        currency: OBJ_DataURL.currency,\r\n        operation: OBJ_DataURL.operation,\r\n        callback_url: OBJ_DataURL.callback_url,\r\n        redirect_url: OBJ_DataURL.redirect_url,\r\n        type: OBJ_DataURL.type,\r\n        auto_approve: OBJ_DataURL.auto_approve,\r\n        signature: STRING_Signature || \"\",\r\n        logoUrl: OBJ_DataURL.logo_url ? OBJ_DataURL.logo_url : \"\",\r\n        email: OBJ_DataURL.email ? OBJ_DataURL.email : \"\",\r\n        document_number: OBJ_DataURL.document_number\r\n          ? OBJ_DataURL.document_number\r\n          : \"\",\r\n        pix_key: OBJ_DataURL.pix_key,\r\n        pix_key_type: OBJ_DataURL.pix_key_type,\r\n      });\r\n    } else {\r\n      setUrlGatewayParameters({\r\n        merchant_transaction_id: OBJ_DataURL.merchant_transaction_id,\r\n        merchant_id: OBJ_DataURL.merchant_id,\r\n        account_id: OBJ_DataURL.account_id,\r\n        amount: OBJ_DataURL.amount,\r\n        currency: OBJ_DataURL.currency,\r\n        operation: OBJ_DataURL.operation,\r\n        callback_url: OBJ_DataURL.callback_url,\r\n        redirect_url: OBJ_DataURL.redirect_url,\r\n        type: OBJ_DataURL.type,\r\n        auto_approve: OBJ_DataURL.auto_approve,\r\n        signature: STRING_Signature || \"\",\r\n        logoUrl: OBJ_DataURL.logo_url ? OBJ_DataURL.logo_url : \"\",\r\n        email: OBJ_DataURL.email ? OBJ_DataURL.email : \"\",\r\n        document_number: OBJ_DataURL.document_number\r\n          ? OBJ_DataURL.document_number\r\n          : \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  function getUrlGateway(DataURL, signature) {\r\n    handleUrlGatewayParameters(DataURL, signature);\r\n\r\n    const merchant_transaction_id = `merchant_transaction_id=${DataURL.merchant_transaction_id}`;\r\n    const merchant_id = `merchant_id=${DataURL.merchant_id}`;\r\n    const account_id = `account_id=${DataURL.account_id}`;\r\n    const amount = `amount=${DataURL.amount}`;\r\n    const currency = `currency=${DataURL.currency}`;\r\n    const operation = `operation=${DataURL.operation}`;\r\n    const callback_url = `callback_url=${DataURL.callback_url}`;\r\n    const redirect_url = `redirect_url=${DataURL.redirect_url}`;\r\n    const mock_type = `type=${DataURL.type}`;\r\n    const mock_auto_approve = `auto_approve=${DataURL.auto_approve}`;\r\n    const Signature = signature ? `&signature=${signature}` : \"\";\r\n    const logoUrl = DataURL.logo_url ? `&logo_url=${DataURL.logo_url}` : \"\";\r\n    const email = DataURL.email ? `&email=${DataURL.email}` : \"\";\r\n    const document_number = DataURL.document_number\r\n      ? `&document_number=${DataURL.document_number}`\r\n      : \"\";\r\n    const pix_key = DataURL.pix_key ? `&pix_key=${DataURL.pix_key}` : null;\r\n    const pix_key_type = DataURL.pix_key_type\r\n      ? `&pix_key_type=${DataURL.pix_key_type}`\r\n      : null;\r\n    let UrlGateway = null;\r\n\r\n    if (\r\n      DataURL.operation === operation_withdraw &&\r\n      !!DataURL.pix_key &&\r\n      !!DataURL.pix_key_type\r\n    ) {\r\n      UrlGateway = `${base_url}?${merchant_transaction_id}&${merchant_id}&${operation}${email}${document_number}&${amount}&${currency}${pix_key_type}${pix_key}&${mock_type}&${account_id}&${callback_url}&${redirect_url}&${mock_auto_approve}${Signature}${logoUrl}`;\r\n    } else {\r\n      UrlGateway = `${base_url}?${merchant_transaction_id}&${merchant_id}&${operation}${email}${document_number}&${amount}&${currency}&${mock_type}&${account_id}&${callback_url}&${redirect_url}&${mock_auto_approve}${Signature}${logoUrl}`;\r\n    }\r\n\r\n    return UrlGateway;\r\n  }\r\n\r\n  async function handleGenerateSignature() {\r\n    const urlWithoutSignature = getUrlGateway(data);\r\n    const valueToGetArgon2iHash = gateway_token + urlWithoutSignature;\r\n    const argon2iHash = await getArgon2i(valueToGetArgon2iHash);\r\n    const signature = utf8_to_b64(argon2iHash);\r\n\r\n    setURL(urlWithoutSignature);\r\n\r\n    setUrlGateway(getUrlGateway(data, signature));\r\n\r\n    setData((oldData) => {\r\n      return { ...oldData, signature };\r\n    });\r\n    setUrlGenerated(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isDev && (\r\n        <ContainerRow style={{ justifyContent: \"center\" }}>\r\n          <ContainerFlexWidthCustom\r\n            widthPercent={20}\r\n            style={{ marginRight: 20, marginBottom: 20 }}\r\n          >\r\n            <CustomButton\r\n              onClick={() => setTypeFormSelected(\"url\")}\r\n              style={{\r\n                width: \"100%\",\r\n                textTransform: \"none\",\r\n                background: typeFormSelected === \"url\" ? \"#1976d2\" : \"#c4c4c4\",\r\n              }}\r\n              variant=\"contained\"\r\n            >\r\n              Selected Form to URL\r\n            </CustomButton>\r\n          </ContainerFlexWidthCustom>\r\n\r\n          <ContainerFlexWidthCustom widthPercent={20}>\r\n            <CustomButton\r\n              onClick={() => setTypeFormSelected(\"json\")}\r\n              style={{\r\n                width: \"100%\",\r\n                textTransform: \"none\",\r\n                background: typeFormSelected === \"json\" ? \"#1976d2\" : \"#c4c4c4\",\r\n              }}\r\n              variant=\"contained\"\r\n            >\r\n              Select Form to Request JSON\r\n            </CustomButton>\r\n          </ContainerFlexWidthCustom>\r\n        </ContainerRow>\r\n      )}\r\n      <Container>\r\n        <Form\r\n          dataDefault={dataDefault}\r\n          base_url={base_url}\r\n          setBaseUrl={setBaseUrl}\r\n          gateway_token={gateway_token}\r\n          setGateway_token={setGateway_token}\r\n          data={data}\r\n          setUrlGenerated={setUrlGenerated}\r\n          handleGenerateURL={() => handleGenerateSignature()}\r\n          setData={setData}\r\n          typeFormSelected={typeFormSelected}\r\n        />\r\n        <ContainerResult>\r\n          {urlGenerated && (\r\n            <>\r\n              {typeFormSelected === \"url\" && (\r\n                <RequestJson\r\n                  type={typeFormSelected}\r\n                  style={{ marginBottom: 20 }}\r\n                  urlGateway={urlGateway}\r\n                  label=\"URL to Gateway Web:\"\r\n                  textButton=\"Open URL Gateway\"\r\n                  baseUrl={dataDefault.base_url}\r\n                  isDevLocalhost={isDevLocalhost}\r\n                  devLocalhostPort={devLocalhostPort}\r\n                />\r\n              )}\r\n\r\n              {typeFormSelected === \"json\" && (\r\n                <RequestJson\r\n                  type={typeFormSelected}\r\n                  style={{ marginBottom: 20 }}\r\n                  dataRequest={data}\r\n                  url={url}\r\n                  label=\"JSON Post Request:\"\r\n                  textButton=\"Copy JSON\"\r\n                  baseUrl={dataDefault.base_url}\r\n                  isDevLocalhost={isDevLocalhost}\r\n                  devLocalhostPort={devLocalhostPort}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n          <CustomButton\r\n            size=\"large\"\r\n            onClick={() => handleGenerateSignature()}\r\n            style={{\r\n              width: \"100%\",\r\n              textTransform: \"none\",\r\n              minWidth: \"100%\",\r\n              marginRight: 0,\r\n            }}\r\n            variant=\"contained\"\r\n          >\r\n            {`Generate ${typeFormSelected.toUpperCase()}`}\r\n          </CustomButton>\r\n          {urlGenerated && (\r\n            <UrlParametersList\r\n              baseUrl={base_url}\r\n              parameters={urlGatewayParameters}\r\n            />\r\n          )}\r\n        </ContainerResult>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable import/no-duplicates */\nimport React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport App from \"./app\";\n\nconst BrowserRouter = ({ history }) => {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"*\" component={App} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default BrowserRouter;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport Routes from \"./routes\";\r\nimport ForceReloadDataProvider from \"./contexts/forceReloadData\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ForceReloadDataProvider>\r\n      <Routes history={history} />\r\n    </ForceReloadDataProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}